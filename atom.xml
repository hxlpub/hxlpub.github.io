<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>linhongxun&#39;s blog</title>
  
  
  <link href="https://hxlpub.github.io/atom.xml" rel="self"/>
  
  <link href="https://hxlpub.github.io/"/>
  <updated>2022-01-24T08:00:10.472Z</updated>
  <id>https://hxlpub.github.io/</id>
  
  <author>
    <name>linhongxun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>daos学习</title>
    <link href="https://hxlpub.github.io/2022/01/24/daos_2.0/"/>
    <id>https://hxlpub.github.io/2022/01/24/daos_2.0/</id>
    <published>2022-01-24T07:57:07.000Z</published>
    <updated>2022-01-24T08:00:10.472Z</updated>
    
    <content type="html"><![CDATA[<p>1.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.&lt;/p&gt;
</summary>
      
    
    
    
    <category term="存储" scheme="https://hxlpub.github.io/categories/%E5%AD%98%E5%82%A8/"/>
    
    <category term="分布式异步存储系统" scheme="https://hxlpub.github.io/categories/%E5%AD%98%E5%82%A8/%E5%88%86%E5%B8%83%E5%BC%8F%E5%BC%82%E6%AD%A5%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="daos" scheme="https://hxlpub.github.io/categories/%E5%AD%98%E5%82%A8/%E5%88%86%E5%B8%83%E5%BC%8F%E5%BC%82%E6%AD%A5%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F/daos/"/>
    
    
  </entry>
  
  <entry>
    <title>notes2022</title>
    <link href="https://hxlpub.github.io/2022/01/15/newpc/"/>
    <id>https://hxlpub.github.io/2022/01/15/newpc/</id>
    <published>2022-01-15T09:05:23.000Z</published>
    <updated>2022-01-15T05:46:45.630Z</updated>
    
    <content type="html"><![CDATA[<center>ps:new year love more ！！！</center>]]></content>
    
    
      
      
    <summary type="html">&lt;center&gt;ps:new year love more ！！！&lt;/center&gt;



</summary>
      
    
    
    
    <category term="startup" scheme="https://hxlpub.github.io/categories/startup/"/>
    
    
    <category term="love more" scheme="https://hxlpub.github.io/tags/love-more/"/>
    
  </entry>
  
  <entry>
    <title>基础概念</title>
    <link href="https://hxlpub.github.io/2022/01/13/system_design_thinking/"/>
    <id>https://hxlpub.github.io/2022/01/13/system_design_thinking/</id>
    <published>2022-01-13T02:16:07.000Z</published>
    <updated>2022-01-13T02:29:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>1、异步同步阻塞非阻塞（以下知乎十分有趣）</p><p><a href="https://www.zhihu.com/question/26393784">https://www.zhihu.com/question/26393784</a></p><p>老张爱喝茶，废话不说，煮开水。 出场人物：老张，水壶两把（普通水壶，简称水壶；会响的水壶，简称响水壶）。 </p><p>1)老张把水壶放到火上，立等水开。（同步阻塞） 老张觉得自己有点傻</p><p>2)老张把水壶放到火上，去客厅看电视，时不时去厨房看看水开没有。（同步非阻塞） 老张还是觉得自己有点傻，于是变高端了，买了把会响笛的那种水壶。水开之后，能大声发出嘀~~~~的噪音。 </p><p>3)老张把响水壶放到火上，立等水开。（异步阻塞） 老张觉得这样傻等意义不大 </p><p>4)老张把响水壶放到火上，去客厅看电视，水壶响之前不再去看它了，响了再去拿壶。（异步非阻塞） 老张觉得自己聪明了。</p><p>所谓同步异步，只是对于水壶而言。 普通水壶，同步；响水壶，异步。 虽然都能干活，但响水壶可以在自己完工之后，提示老张水开了。这是普通水壶所不能及的。 同步只能让调用者去轮询自己（情况2中），造成老张效率的低下。所谓阻塞非阻塞，仅仅对于老张而言。 立等的老张，阻塞；看电视的老张，非阻塞。 情况1和情况3中老张就是阻塞的，媳妇喊他都不知道。虽然3中响水壶是异步的，可对于立等的老张没有太大的意义。所以一般异步是配合非阻塞使用的，这样才能发挥异步的效用。</p><p>作者：知乎用户<br>链接：<a href="https://www.zhihu.com/question/26393784/answer/513257548">https://www.zhihu.com/question/26393784/answer/513257548</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1、异步同步阻塞非阻塞（以下知乎十分有趣）&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/26393784&quot;&gt;https://www.zhihu.com/question/26393784&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;老张爱喝茶，废</summary>
      
    
    
    
    <category term="设计之道" scheme="https://hxlpub.github.io/categories/%E8%AE%BE%E8%AE%A1%E4%B9%8B%E9%81%93/"/>
    
    <category term="概念" scheme="https://hxlpub.github.io/categories/%E8%AE%BE%E8%AE%A1%E4%B9%8B%E9%81%93/%E6%A6%82%E5%BF%B5/"/>
    
    
    <category term="设计" scheme="https://hxlpub.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>go基础+原理修养</title>
    <link href="https://hxlpub.github.io/2022/01/09/go_base/"/>
    <id>https://hxlpub.github.io/2022/01/09/go_base/</id>
    <published>2022-01-09T04:47:30.000Z</published>
    <updated>2022-02-10T11:19:19.344Z</updated>
    
    <content type="html"><![CDATA[<hr>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
</summary>
      
    
    
    
    <category term="服务端" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    <category term="go" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/go/"/>
    
    <category term="语言基础+原理" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/go/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80-%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="服务端" scheme="https://hxlpub.github.io/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>go基础+原理修养</title>
    <link href="https://hxlpub.github.io/2022/01/09/go_base_coding_rule/"/>
    <id>https://hxlpub.github.io/2022/01/09/go_base_coding_rule/</id>
    <published>2022-01-09T04:47:30.000Z</published>
    <updated>2022-01-12T10:55:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>​    </p><p>​    </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​    &lt;/p&gt;
&lt;p&gt;​    &lt;/p&gt;
</summary>
      
    
    
    
    <category term="服务端" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    <category term="go" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/go/"/>
    
    <category term="编码规范" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/go/%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    
    
    <category term="服务端" scheme="https://hxlpub.github.io/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Makefile</title>
    <link href="https://hxlpub.github.io/2021/11/09/Makefile/"/>
    <id>https://hxlpub.github.io/2021/11/09/Makefile/</id>
    <published>2021-11-09T11:56:07.000Z</published>
    <updated>2021-11-09T11:56:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>​        </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​        &lt;/p&gt;
</summary>
      
    
    
    
    <category term="服务端" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    <category term="编译" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E7%BC%96%E8%AF%91/"/>
    
    <category term="Makefile" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E7%BC%96%E8%AF%91/Makefile/"/>
    
    
  </entry>
  
  <entry>
    <title>C 的几个重要特性</title>
    <link href="https://hxlpub.github.io/2021/11/06/c_c++/"/>
    <id>https://hxlpub.github.io/2021/11/06/c_c++/</id>
    <published>2021-11-06T03:55:07.000Z</published>
    <updated>2022-01-02T05:12:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>1.本篇目的：着重介绍C的几个重要特性一级底层原理</p><p>2.本篇的结构</p><ul><li>第一部分：几个重要的特性与底层原理</li><li>第二部分：结合开源项目特性应用</li><li>第三部分：良好的编码风格（附录）</li></ul><hr><center>第一部分：几个重要的特性与底层原理</center><ol><li><p>预处理器几个特性</p><ul><li><p>#include指令：文件包含，该指令所在的行都将被替换为由文件名指定的文件的内容，一种将所有声明捆绑在一起的较好的办法，保证所有的源文件有相同的定义与变量声明</p><p>​    #include “文件” ：先在源文件所在位置查找该文件，如果在该位置未找到，再根据相应规则查找</p><p>​    #include &lt;文件&gt; ：根据相应规则查找</p></li><li><p>#define指令：宏替换，#define 名字 替换文本</p></li><li><p>宏<br>：将函数定义为宏可避免调用函数时所需的运行时开销</p></li></ul></li><li><p>变量</p><table><thead><tr><th>类型</th><th>作用域</th><th>存储位置</th><th>生命周期</th><th>特点</th></tr></thead><tbody><tr><td>static</td><td>所在文件（static 外部变量）、 所在函数（static 局部变量）</td><td>定义后一直占据存储空间</td><td></td><td>只被初始化一次（程序执行前），初始化表达式是常量表达式，没有初始化表达式的元素被初始化为0</td></tr><tr><td>register</td><td>局部变量 、函数形参</td><td>寄存器</td><td></td><td>程序更小，执行速度更快</td></tr><tr><td>外部变量external</td><td></td><td></td><td></td><td>只被初始化一次（程序执行前），初始化表达式必须是常量表达式，没有初始化表达式的元素被初始化为0;</td></tr><tr><td>局部变量</td><td>函数内部</td><td></td><td>函数被调用期间</td><td>每次进入函数或程序块都初始化，没有初始化表达式的元素被初始化为0</td></tr></tbody></table></li><li><p>指针</p><p>​    运算符&amp;：取地址，只能应用于内存中对象，即变量与数组元素，不能作用与表达式、常量、或register变量<br>​    运算符<em>：间接寻址或间接引用运算符，作用于指针时，将访问指针所指向的对象。<br>​    &amp;、</em>优先级高于算术运算符<br>​    指针变量可以相互赋值，指向相同的对象</p><ul><li>1）指针与数组 ：</li></ul><p>​    一般，指针编写的程序比用数组下标编写的程序执行速度快<br>​    一个通过数组和下标实现的表达式可等价地通过指针和偏移量实现</p><p>​    char s[] == char *s  、&amp;a[2] == a+2 （a数组）</p><ul><li><p>2）特性</p><ul><li>某些情况下对指针进行比较运算（如指针p、q指向同一个数组的成员）</li><li>指针可以和整数相加或相减</li><li>指针的算术运算具有一致性：所有的指针运算都会自动考虑它所指向的对象的长度</li><li>有效的指针运算：<ul><li>相同类型指针之间赋值运算</li><li>指针同整数之间的加法减法</li><li>指向相同数组中元素的两个指针间的减法和比较运算</li><li>指针赋值为0或指针与0之间的比较运算</li></ul></li></ul></li><li><p>3）指针数组、指针的指针</p><ul><li><p>如char *lineptr[10]</p><ul><li>初始化：如，static char *name[] = {“xiaoming”,”xiaoqiang”}</li></ul></li><li><p>指针数组优点：数组的每一个元素的长度可以不同</p></li></ul></li><li><p>4)函数指针</p><p> K&amp;R P99</p></li></ul></li><li><p>运算符优先级</p><p>1）优先级1：数组下标[]<strong>，</strong>圆括号( )<strong>，</strong>成员选择（对象）.，成员选择（指针）-&gt;</p><p>结合方向为左到右</p><p><img src="https://github.com/hxlpub/imgs/blob/master/%E4%BC%98%E5%85%88%E7%BA%A71.jpg?raw=true" alt="优先级1"></p><p>2）优先级2：负号运算符-，强制类型转换，自增运算符++，自减运算符–，取值运算符，取地址运算符&amp;，逻辑非运算符！，按位取反运算符~，长度运算sizeof符，结合方向为右到左</p><p><img src="https://github.com/hxlpub/imgs/blob/master/%E4%BC%98%E5%85%88%E7%BA%A72.jpg?raw=true" alt="优先级2"></p><p>3）优先级3：除/，乘*，余数%，结合方向为左到右</p><p><img src="https://github.com/hxlpub/imgs/blob/master/%E4%BC%98%E5%85%88%E7%BA%A73.jpg?raw=true" alt="优先级3"></p><p>4）优先级4：加+，减-，结合方向为左到右</p><p><img src="https://github.com/hxlpub/imgs/blob/master/%E4%BC%98%E5%85%88%E7%BA%A74.jpg?raw=true" alt="优先级4"></p><p>5）优先级5：左移&lt;&lt;，右移&gt;&gt;，结合方向为左到右</p><p><img src="https://github.com/hxlpub/imgs/blob/master/%E4%BC%98%E5%85%88%E7%BA%A75.jpg?raw=true" alt="优先级5"></p><p>6）优先级6：大于&gt;，大于等于&gt;=，小于&lt;，小于等于&lt;=，结合方向为左到右</p><p><img src="https://github.com/hxlpub/imgs/blob/master/%E4%BC%98%E5%85%88%E7%BA%A76.jpg?raw=true" alt="优先级6"></p><p>7）优先级7：等于==，不等于!=，结合方向为左到右</p><p><img src="https://github.com/hxlpub/imgs/blob/master/%E4%BC%98%E5%85%88%E7%BA%A77.jpg?raw=true" alt="优先级7"></p><p>8）优先级8：级别先后为，按位与&amp;，按位异或^，按位或| ，逻辑与&amp;&amp;，逻辑或|| 条件运算符?:，注意得是条件运算结合方向为右到左</p><p><img src="https://github.com/hxlpub/imgs/blob/master/%E4%BC%98%E5%85%88%E7%BA%A78.jpg?raw=true" alt="优先级8"></p><p>9）优先级9：赋值运算符=，除后赋值/=，乘后赋值*=，取模后赋值%=，加后赋值+=，减后赋值-=，左移后赋值&lt;&lt;=，右移后赋值&gt;&gt;=，按位与后赋值&amp;=，按位异或后赋值^=，按位或后赋值|=，结合方向为右到左</p><p><img src="https://github.com/hxlpub/imgs/blob/master/%E4%BC%98%E5%85%88%E7%BA%A79.jpg?raw=true" alt="优先级9"></p></li><li><p>结构</p><p>struct point {</p><p>​    int x;</p><p>​    int y;</p><p>};</p><p>声明：struct {int x,int y} x,y,z; #分配存储空间</p><p>​            struct point pt;</p><p>初始化：</p><p>​            struct point maxpt = {320, 200};</p><p>成员：maxpt.x</p><p>​           maxpt.y</p><p>嵌套：</p><p>​            struct rect {</p><p>​                struct point pt1;</p><p>​                struct point pt2;            </p><p>​            };</p><p>​            struct rect screen;</p><p>​            成员： screen.pt1.x</p><p>合法操作：</p><p>​            1.作为一个整体赋值和赋值</p><p>​            2.通过&amp;取地址</p><p>​            3.访问其成员</p><p>结构指针：</p><p>​            struct  point  *ptrstr;</p><p>​            ptrstr -&gt; x</p><p>结构数组</p><p>​             struct key {<br>​                   char *word;<br>​                   int count;</p><pre><code>           &#125; keytab[] = &#123;               &#123; &quot;auto&quot;, 0 &#125;,              &#123; &quot;break&quot;, 0 &#125;,              &#123; &quot;case&quot;, 0 &#125;            </code></pre><p>​                }</p><p>结构指针</p><p>​    关键字统计</p><p>自引用结构</p><p>​    K$R P116 ex:统计输入所有单词出现频次（二叉树）</p><p>表查找</p><p>类型定义（typedef）</p><p>联合</p><p>位字段    </p><p>​                </p></li><li><p>命令行参数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[] )</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        #./test -x 注意优先级顺序</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,argv[<span class="number">0</span>]);#./<span class="function">test</span></span><br><span class="line"><span class="function">        <span class="title">printf</span><span class="params">(<span class="string">&quot;%c\n&quot;</span>,(*++argv)[<span class="number">0</span>])</span></span>;#-  argv指向argv[<span class="number">1</span>]</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>,*++argv[<span class="number">0</span>]);<span class="meta">#x,先与[]结合,所以依然指向argv[1]</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,argc);#<span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">~   </span><br></pre></td></tr></table></figure></li><li><p>运算符集合</p></li><li><p>控制流语句</p></li><li><p>标准库</p><p>​    输入输出：printf (“%d”,i)、scanf(“%d”,&amp;i)</p><p>​    文件访问：</p><p>​        1.打开文件，返回文件指针    </p><p>​    </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FILE *fp;</span><br><span class="line"><span class="function">FILE *<span class="title">fopen</span><span class="params">(<span class="keyword">char</span> *name,<span class="keyword">char</span> *mode)</span> </span></span><br><span class="line"><span class="function">fp </span>= fopen(name,mode)</span><br></pre></td></tr></table></figure><p>​    2.文件读写</p><p>​        int getc(FILE *fp)</p><p>​        int putc(FILE *fp)    </p><p>​        #define getchar() getc(stdin)<br>​        #define putchar(c) putc((c), stdout)                    </p><p>​        int fscanf(FILE *fp, char *format, …)<br>​        int fprintf(FILE *fp, char *format, …)</p><p>​    3.关闭文件</p><p>​        int fclose (FILE *fp)</p><p>​    错误处理</p><p>​        stderr 和exit</p><p>​        fprintf(stderr, “%s: can’t open %s\n”,prog, *argv);</p><p>​        int ferror（FILE *fp）#若流fp中出错，则函数返回一个非0值</p><p>​        int feof(FILE *fp) #如果指定的文件到达文件结尾，返回一个非0值</p><p>​    行输入行输出</p><p>​    char *fgets(char *line, int maxline, FILE *fp) #读文件一行到line</p><p>​    int fputs(char *line, FILE *fp)#写line到文件</p><p>​    其他函数</p><p>​    <img src="https://github.com/hxlpub/imgs/blob/master/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E7%AC%A6%E7%B1%BB%E5%87%BD%E6%95%B0.png?raw=true" alt="字符和字符串操作函数"></p><ol start="10"><li><p>UNIX系统接口</p><p>系统调用：操作系统内的函数，实现标准库函数，不同的操作系统实现其标准库函数的方式和方法不同</p><p><strong>read、write</strong>#输入输出</p><p>int n_read = read(int fd, char *buf, int n);<br>int n_written = write(int fd, char *buf, int n);</p><p><strong>open、create</strong>#读写之前显式打开文件，open打开已存在文件，如果打开一个不存在文件报错，而create创建新文件或覆盖已有旧文件</p><p>#flags ：O_RDONLY、O_WRONLY、O_RDWR，perms：权限，</p><p>int fd;<br>int open(char *name, int flags, int perms);<br>fd = open(name, flags, perms);</p><p>int creat(char *name, int perms);<br>fd = creat(name, perms);</p><p><strong>close、unlink</strong>#</p><p><strong>lseek</strong>#随机访问，不实际读写数据</p><p>long lseek(int fd, long offset, int origin);</p></li></ol></li></ol><hr><center>第二部分：结合开源项目特性应用</center>     <hr><center>第三部分：良好的编码风格（附录）<ul><li>正确缩进</li><li>适当空格<ul><li>运算符两边各加一个空格字符</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.本篇目的：着重介绍C的几个重要特性一级底层原理&lt;/p&gt;
&lt;p&gt;2.本篇的结构&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一部分：几个重要的特性与底层原理&lt;/li&gt;
&lt;li&gt;第二部分：结合开源项目特性应用&lt;/li&gt;
&lt;li&gt;第三部分：良好的编码风格（附录）&lt;/li&gt;
&lt;/ul&gt;
&lt;hr</summary>
      
    
    
    
    <category term="服务端" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    <category term="C_C++" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/C-C/"/>
    
    <category term="基础篇：C" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/C-C/%E5%9F%BA%E7%A1%80%E7%AF%87%EF%BC%9AC/"/>
    
    
  </entry>
  
  <entry>
    <title>C++基础知识</title>
    <link href="https://hxlpub.github.io/2021/11/06/c++%20/"/>
    <id>https://hxlpub.github.io/2021/11/06/c++%20/</id>
    <published>2021-11-06T03:55:07.000Z</published>
    <updated>2022-01-02T09:33:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>一、复合类型</p><p>​        </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一、复合类型&lt;/p&gt;
&lt;p&gt;​        &lt;/p&gt;
</summary>
      
    
    
    
    <category term="服务端" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    <category term="C_C++" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/C-C/"/>
    
    <category term="C++篇：回顾" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/C-C/C-%E7%AF%87%EF%BC%9A%E5%9B%9E%E9%A1%BE/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo搭建博客</title>
    <link href="https://hxlpub.github.io/2021/09/15/hexo_build_blog/"/>
    <id>https://hxlpub.github.io/2021/09/15/hexo_build_blog/</id>
    <published>2021-09-15T13:08:37.000Z</published>
    <updated>2021-10-21T12:39:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>2021-10-21–评论系统上线啦！！！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2021-10-21–评论系统上线啦！！！&lt;/p&gt;
</summary>
      
    
    
    
    <category term="前端" scheme="https://hxlpub.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="静态页面" scheme="https://hxlpub.github.io/categories/%E5%89%8D%E7%AB%AF/%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2/"/>
    
    <category term="Hexo静态页面生成器" scheme="https://hxlpub.github.io/categories/%E5%89%8D%E7%AB%AF/%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2/Hexo%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2%E7%94%9F%E6%88%90%E5%99%A8/"/>
    
    
    <category term="Hexo" scheme="https://hxlpub.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>go实现tcp协议</title>
    <link href="https://hxlpub.github.io/2021/09/15/go_tcp/"/>
    <id>https://hxlpub.github.io/2021/09/15/go_tcp/</id>
    <published>2021-09-15T07:42:30.000Z</published>
    <updated>2021-10-09T12:09:12.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="1、client端client-go"><a href="#1、client端client-go" class="headerlink" title="1、client端client.go"></a>1、client端client.go</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tcpclient 为client.go所在的上一层目录</span></span><br><span class="line"><span class="keyword">package</span> tcpclient</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;net&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="comment">//&quot;io/ioutil&quot;</span></span><br><span class="line"><span class="string">&quot;strconv&quot;</span></span><br><span class="line"><span class="comment">//&quot;../log&quot;</span></span><br><span class="line"><span class="comment">//&quot;strings&quot;</span></span><br><span class="line"><span class="comment">//&quot;bytes&quot;</span></span><br><span class="line"><span class="comment">//&quot;encoding/xml&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">//组装tcp请求</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">RequestMsg</span><span class="params">(serialNum <span class="keyword">string</span>, randomNum <span class="keyword">string</span>, toAddr <span class="keyword">string</span>, fromAddr <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line"></span><br><span class="line">body := <span class="string">&quot;&lt;?xml version=\&quot;1.0\&quot;?&gt;\r\n&quot;</span> +</span><br><span class="line"><span class="string">&quot;&lt;Config&gt;\r\n&quot;</span> +</span><br><span class="line"><span class="string">&quot;&lt;CmdType&gt;ACTIVE&lt;/CmdType&gt;\r\n&quot;</span> +</span><br><span class="line"><span class="string">&quot;&lt;CmdInfo&gt;GetActiveInfo&lt;/CmdInfo&gt;\r\n&quot;</span> +</span><br><span class="line"><span class="string">&quot;&lt;SerialNumInfo&gt;\r\n&quot;</span> +</span><br><span class="line"><span class="string">&quot;&lt;SerialNum&gt;&quot;</span> + serialNum + <span class="string">&quot;&lt;/SerialNum&gt;\r\n&quot;</span> +</span><br><span class="line"><span class="string">&quot;&lt;/SerialNumInfo&gt;\r\n&quot;</span> +</span><br><span class="line"><span class="string">&quot;&lt;/Config&gt;&quot;</span></span><br><span class="line"></span><br><span class="line">head := <span class="string">&quot;HIK-PRODUCT\r\n&quot;</span> +</span><br><span class="line"><span class="string">&quot;Via:HIKSTOR/1.0/TCP\r\n&quot;</span> +</span><br><span class="line"><span class="string">&quot;From:&quot;</span> + fromAddr + <span class="string">&quot;\r\n&quot;</span> +</span><br><span class="line"><span class="string">&quot;To:&quot;</span> + toAddr + <span class="string">&quot;\r\n&quot;</span> +</span><br><span class="line"><span class="string">&quot;Call-ID:&quot;</span> + randomNum + <span class="string">&quot;\r\n&quot;</span> +</span><br><span class="line"><span class="string">&quot;Content-Type:xml\r\n&quot;</span> +</span><br><span class="line"><span class="string">&quot;Content-Length:&quot;</span> + strconv.Itoa(<span class="built_in">len</span>(body)) + <span class="string">&quot;\r\n\r\n&quot;</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> head + body</span><br><span class="line"><span class="comment">//return body</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//向server端发起请求</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetBomInfoFromThirdServ</span><span class="params">(serialNum <span class="keyword">string</span>,randomNum <span class="keyword">string</span>, toAddr <span class="keyword">string</span>, fromAddr <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>,error)</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//主动发起连接请求</span></span><br><span class="line">conn,err :=net.Dial(<span class="string">&quot;tcp&quot;</span>,<span class="string">&quot;10.192.44.183:35004&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;dial err&quot;</span>,err)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"><span class="comment">//向服务端发送请求</span></span><br><span class="line">reqmsg := RequestMsg(serialNum,randomNum,toAddr,fromAddr)</span><br><span class="line">_, err = conn.Write([]<span class="keyword">byte</span>(reqmsg))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;send err=&quot;</span>, err) <span class="comment">//出错退出</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>,err</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">//接收响应</span></span><br><span class="line">buf := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">1024</span>)</span><br><span class="line"><span class="comment">//response, err :=ioutil.ReadAll(conn)</span></span><br><span class="line"><span class="comment">//if err != nil &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//fmt.Println(&quot;rec err&quot;,err)</span></span><br><span class="line">    <span class="comment">//   return &quot;&quot;, err</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">n, err :=conn.Read(buf)</span><br><span class="line"><span class="comment">//fmt.Println(&quot;n=&quot;, n)</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;服务器read err=&quot;</span>, err) <span class="comment">//出错退出</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>,err</span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">string</span>(buf[:n<span class="number">-1</span>]),<span class="literal">nil</span></span><br><span class="line"><span class="comment">//return buf,nil</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2、server端server-go"><a href="#2、server端server-go" class="headerlink" title="2、server端server.go"></a>2、server端server.go</h5>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;1、client端client-go&quot;&gt;&lt;a href=&quot;#1、client端client-go&quot; class=&quot;headerlink&quot; title=&quot;1、client端client.go&quot;&gt;&lt;/a&gt;1、client端client.go&lt;/h5&gt;&lt;figure c</summary>
      
    
    
    
    <category term="服务端" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    <category term="go" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/go/"/>
    
    <category term="协议开发" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/go/%E5%8D%8F%E8%AE%AE%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="服务端" scheme="https://hxlpub.github.io/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>算法</title>
    <link href="https://hxlpub.github.io/2021/09/14/algorithm/"/>
    <id>https://hxlpub.github.io/2021/09/14/algorithm/</id>
    <published>2021-09-14T09:26:07.000Z</published>
    <updated>2022-01-07T01:40:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>1.二分排序  K&amp;R P99</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.二分排序  K&amp;amp;R P99&lt;/p&gt;
</summary>
      
    
    
    
    <category term="算法" scheme="https://hxlpub.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="排序" scheme="https://hxlpub.github.io/categories/%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>GCC编译</title>
    <link href="https://hxlpub.github.io/2021/09/14/compile_debug/"/>
    <id>https://hxlpub.github.io/2021/09/14/compile_debug/</id>
    <published>2021-09-14T09:26:07.000Z</published>
    <updated>2022-02-26T07:50:30.168Z</updated>
    
    <content type="html"><![CDATA[<p>​        GCC原名为GNU C语言编译器（GNU C Compiler），只能处理C语言。但其很快扩展，变得可处理C++，后来又扩展为能够支持更多编程语言，如Fortran、Pascal、Objective -C、Java、Ada、Go以及各类处理器架构上的汇编语言等，所以改名GNU编译器套件（GNU Compiler Collection）。</p><p>​        虽然我们称GCC是<a href="https://baike.baidu.com/item/C%E8%AF%AD%E8%A8%80">C语言</a>的<a href="https://baike.baidu.com/item/%E7%BC%96%E8%AF%91%E5%99%A8">编译器</a>，但使用gcc由C语言<a href="https://baike.baidu.com/item/%E6%BA%90%E4%BB%A3%E7%A0%81">源代码</a>文件生成<a href="https://baike.baidu.com/item/%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6">可执行文件</a>的过程不仅仅是编译的过程，而是要经历四个相互关联的步骤∶</p><p>​        <a href="https://baike.baidu.com/item/%E9%A2%84%E5%A4%84%E7%90%86">预处理</a>（也称<a href="https://baike.baidu.com/item/%E9%A2%84%E7%BC%96%E8%AF%91">预编译</a>，Preprocessing）</p><p>​        <a href="https://baike.baidu.com/item/%E7%BC%96%E8%AF%91">编译</a>（Compilation）</p><p>​        <a href="https://baike.baidu.com/item/%E6%B1%87%E7%BC%96">汇编</a>（Assembly）</p><p>​        链接（Linking）</p><p><img src="https://github.com/hxlpub/imgs/blob/master/compile.png?raw=true"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​        GCC原名为GNU C语言编译器（GNU C Compiler），只能处理C语言。但其很快扩展，变得可处理C++，后来又扩展为能够支持更多编程语言，如Fortran、Pascal、Objective -C、Java、Ada、Go以及各类处理器架构上的汇编语</summary>
      
    
    
    
    <category term="服务端" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    <category term="编译" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E7%BC%96%E8%AF%91/"/>
    
    <category term="GCC编译" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E7%BC%96%E8%AF%91/GCC%E7%BC%96%E8%AF%91/"/>
    
    
  </entry>
  
  <entry>
    <title>Python基础</title>
    <link href="https://hxlpub.github.io/2021/09/14/Python/"/>
    <id>https://hxlpub.github.io/2021/09/14/Python/</id>
    <published>2021-09-14T09:26:07.000Z</published>
    <updated>2022-02-26T07:47:41.136Z</updated>
    
    <content type="html"><![CDATA[<p>一、初级</p><ol><li><p>环境搭建</p></li><li><p>基础语法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">   </span><br></pre></td></tr></table></figure></li><li><p>基本数据类型</p></li><li><p>数据类型转换</p></li><li><p>推导式</p></li><li><p>解释器</p></li><li><p>注释</p></li><li><p>运算符</p></li><li><p>数字</p></li><li><p>字符串</p></li><li><p>列表</p></li><li><p>元组</p></li><li><p>字典</p></li><li><p>集合</p></li><li><p>条件控制</p></li><li><p>循环语句</p></li><li><p>迭代器与生成器</p></li><li><p>函数</p></li><li><p>数据结构</p></li><li><p>模块</p></li><li><p>输入输出</p></li><li><p>File</p></li><li><p>OS</p></li><li><p>错误与异常处理</p></li><li><p>面向对象</p></li><li><p>命名空间/作用域</p></li><li><p>标准库</p></li></ol><hr><p>二、高级</p><ol><li>正则表达式</li><li>CGI编程</li><li>MySql</li><li></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一、初级&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;环境搭建&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基础语法&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line</summary>
      
    
    
    
    <category term="服务端" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    <category term="Python" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/Python/"/>
    
    <category term="语言基础原理" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/Python/%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E5%8E%9F%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>cv</title>
    <link href="https://hxlpub.github.io/2021/09/14/cv/"/>
    <id>https://hxlpub.github.io/2021/09/14/cv/</id>
    <published>2021-09-14T09:26:07.000Z</published>
    <updated>2021-10-15T04:00:44.000Z</updated>
    
    
    
    
    <category term="计算机视觉" scheme="https://hxlpub.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
    
  </entry>
  
  <entry>
    <title>GCC编译</title>
    <link href="https://hxlpub.github.io/2021/09/14/compiler/"/>
    <id>https://hxlpub.github.io/2021/09/14/compiler/</id>
    <published>2021-09-14T09:26:07.000Z</published>
    <updated>2022-03-03T09:39:38.195Z</updated>
    
    <content type="html"><![CDATA[<h2 id="section-1-GCC"><a href="#section-1-GCC" class="headerlink" title="section 1 GCC"></a>section 1 GCC</h2><p>​        GCC原名为GNU C语言编译器（GNU C Compiler），只能处理C语言。但其很快扩展，变得可处理C++，后来又扩展为能够支持更多编程语言，如Fortran、Pascal、Objective -C、Java、Ada、Go以及各类处理器架构上的汇编语言等，所以改名GNU编译器套件（GNU Compiler Collection）。</p><p>​        虽然我们称GCC是<a href="https://baike.baidu.com/item/C%E8%AF%AD%E8%A8%80">C语言</a>的<a href="https://baike.baidu.com/item/%E7%BC%96%E8%AF%91%E5%99%A8">编译器</a>，但使用gcc由C语言<a href="https://baike.baidu.com/item/%E6%BA%90%E4%BB%A3%E7%A0%81">源代码</a>文件生成<a href="https://baike.baidu.com/item/%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6">可执行文件</a>的过程不仅仅是编译的过程，而是要经历四个相互关联的步骤∶</p><p>​        <a href="https://baike.baidu.com/item/%E9%A2%84%E5%A4%84%E7%90%86">预处理</a>（也称<a href="https://baike.baidu.com/item/%E9%A2%84%E7%BC%96%E8%AF%91">预编译</a>，Preprocessing）</p><p>​        <a href="https://baike.baidu.com/item/%E7%BC%96%E8%AF%91">编译</a>（Compilation）</p><p>​        <a href="https://baike.baidu.com/item/%E6%B1%87%E7%BC%96">汇编</a>（Assembly）</p><p>​        链接（Linking）</p><p><img src="https://github.com/hxlpub/imgs/blob/master/compile.png?raw=true"></p><hr><h2 id="section2-Makefile"><a href="#section2-Makefile" class="headerlink" title="section2 Makefile"></a>section2 Makefile</h2><p><em><strong>概述</strong></em></p><p>什么是makefile？</p><p>windows开发IDE为我们做了这部分的工作，而在Linux 端开发，必须要自己写makefile,会不会写makefile，从一个侧面说明了一个人是否具备完成大型工程的能力。会不会写makefile，从一个侧面说明了一个人是否具备完成大型工程的能力。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;section-1-GCC&quot;&gt;&lt;a href=&quot;#section-1-GCC&quot; class=&quot;headerlink&quot; title=&quot;section 1 GCC&quot;&gt;&lt;/a&gt;section 1 GCC&lt;/h2&gt;&lt;p&gt;​        GCC原名为GNU C语言编译器（</summary>
      
    
    
    
    <category term="服务端" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    <category term="编译" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E7%BC%96%E8%AF%91/"/>
    
    <category term="工具-Makefile-scons" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E7%BC%96%E8%AF%91/%E5%B7%A5%E5%85%B7-Makefile-scons/"/>
    
    
  </entry>
  
  <entry>
    <title>PostgreSQL</title>
    <link href="https://hxlpub.github.io/2021/09/14/database_redis/"/>
    <id>https://hxlpub.github.io/2021/09/14/database_redis/</id>
    <published>2021-09-14T09:26:07.000Z</published>
    <updated>2021-10-14T10:05:50.000Z</updated>
    
    
    
    
    <category term="数据库" scheme="https://hxlpub.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="PostgreSQL" scheme="https://hxlpub.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/PostgreSQL/"/>
    
    
  </entry>
  
  <entry>
    <title>postgres数据库基本操作</title>
    <link href="https://hxlpub.github.io/2021/09/14/database_pg/"/>
    <id>https://hxlpub.github.io/2021/09/14/database_pg/</id>
    <published>2021-09-14T09:26:07.000Z</published>
    <updated>2022-01-12T06:04:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>1.pgadmin工具</p><p>2.增删改查</p><p>​    插入批量记录：</p><p>​    1）生成insertDeviceChannels</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">function</span> insertDeviceChannels(num_limit <span class="type">integer</span>)</span><br><span class="line">    <span class="keyword">returns</span></span><br><span class="line">        <span class="type">boolean</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">$$</span><br><span class="line"><span class="keyword">declare</span></span><br><span class="line">    id                  <span class="type">integer</span> <span class="keyword">default</span> <span class="number">1</span>;</span><br><span class="line">    devName             <span class="type">varchar</span>;</span><br><span class="line">    channelName         <span class="type">varchar</span>;</span><br><span class="line">    devIndexCode        <span class="type">varchar</span>;</span><br><span class="line">    devIp               <span class="type">varchar</span>;</span><br><span class="line">    devIpEnd1           <span class="type">integer</span> <span class="keyword">default</span> <span class="number">1</span>;</span><br><span class="line">    devIpEnd2           <span class="type">integer</span> <span class="keyword">default</span> <span class="number">1</span>;</span><br><span class="line">    devPort             <span class="type">integer</span> <span class="keyword">default</span> <span class="number">1001</span>;</span><br><span class="line">    devExternalCode     <span class="type">varchar</span>;</span><br><span class="line">    channelExternalCode <span class="type">varchar</span>;</span><br><span class="line">    regionCount         <span class="type">integer</span>;</span><br><span class="line">    regionResourceLimit <span class="type">integer</span>;</span><br><span class="line">    regionResourceNum   <span class="type">integer</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line">    regionIndexCode     <span class="type">varchar</span>;</span><br><span class="line">    offsetNum           <span class="type">integer</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">select</span> <span class="built_in">count</span>(o.region_index_code) <span class="keyword">into</span> regionCount <span class="keyword">from</span> tb_region o <span class="keyword">where</span> region_status <span class="operator">=</span> <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    raise notice <span class="string">&#x27;regionCount %&#x27;</span> , regionCount;</span><br><span class="line">    if num_limit <span class="operator">%</span> regionCount <span class="operator">=</span> <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        regionResourceLimit :<span class="operator">=</span> num_limit <span class="operator">/</span> regionCount;</span><br><span class="line">    <span class="keyword">end</span> if;</span><br><span class="line">    if num_limit <span class="operator">%</span> regionCount <span class="operator">&gt;</span> <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">        regionResourceLimit :<span class="operator">=</span> num_limit <span class="operator">/</span> regionCount <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span> if;</span><br><span class="line">    while devIpEnd1 <span class="operator">&lt;=</span> <span class="number">100</span></span><br><span class="line">        loop</span><br><span class="line">            devIpEnd2 :<span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">            while devIpEnd2 <span class="operator">&lt;=</span> <span class="number">100</span></span><br><span class="line">                loop</span><br><span class="line">                    devip :<span class="operator">=</span> <span class="string">&#x27;10.33.&#x27;</span> <span class="operator">||</span> devIpEnd1 <span class="operator">||</span> <span class="string">&#x27;.&#x27;</span> <span class="operator">||</span> devIpEnd2;</span><br><span class="line">                    devPort :<span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">                    while devPort <span class="operator">&lt;=</span> <span class="number">1099</span></span><br><span class="line">                        loop</span><br><span class="line">                            devName :<span class="operator">=</span> devip;</span><br><span class="line">                            devIndexCode :<span class="operator">=</span> uuid_generate_v4();</span><br><span class="line">                            if regionIndexCode <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span></span><br><span class="line">                                <span class="keyword">select</span> region_index_code <span class="keyword">into</span> regionIndexCode <span class="keyword">from</span> tb_region <span class="keyword">where</span> region_status <span class="operator">=</span> <span class="string">&#x27;0&#x27;</span> limit <span class="number">1</span> <span class="keyword">offset</span> offsetNum;</span><br><span class="line">                            <span class="keyword">end</span> if;</span><br><span class="line">                            <span class="keyword">INSERT</span> <span class="keyword">INTO</span> public.tb_device (dev_id, dev_index_code, dev_name, dev_addr, dev_port,</span><br><span class="line">                                                          dev_model, active_device_code,</span><br><span class="line">                                                          dev_username, dev_password, pwd_strength,</span><br><span class="line">                                                          dev_type, dev_serial_num, dis_order,</span><br><span class="line">                                                          dev_capability,                                                       </span><br><span class="line">                                                          manufacturer, treaty_type, driver, sync_iac, remote_status,</span><br><span class="line">                                                          region_index_code, domain_id,</span><br><span class="line">                                                          ezviz_user_id, ezviz_dev_code,                                                       </span><br><span class="line">                                                          dev_restype, business_class,</span><br><span class="line">                                                          description, version,</span><br><span class="line">                                                          is_cascade,                                                                                                                </span><br><span class="line">                                                          extended_attribute, com_id,</span><br><span class="line">                                                          data_no, status, create_time, update_time,</span><br><span class="line">                                                          creator, modifier</span><br><span class="line">                                                          )</span><br><span class="line">                            <span class="keyword">VALUES</span> (uuid_generate_v4(), devIndexCode, devName, devIp, devPort, </span><br><span class="line">     <span class="string">&#x27;Simulator&#x27;</span>, <span class="keyword">null</span>,</span><br><span class="line">                                    <span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;Dg/I6if34PWRn093VjyPqg==&#x27;</span>, <span class="number">3</span>,</span><br><span class="line">    <span class="keyword">null</span>, <span class="string">&#x27;SimulatorDevice&#x27;</span>, <span class="number">1</span>,</span><br><span class="line">    <span class="string">&#x27;&#123;&#125;&#x27;</span>,</span><br><span class="line">                                    <span class="string">&#x27;hikvision&#x27;</span>, <span class="string">&#x27;hiksdk_net&#x27;</span>, <span class="string">&#x27;drv_vss_hiksdk_general_1.13.100&#x27;</span>, <span class="number">0</span>, <span class="number">1</span>,</span><br><span class="line">     regionIndexCode, <span class="number">0</span>,</span><br><span class="line">     <span class="keyword">null</span>, <span class="keyword">null</span>, </span><br><span class="line">     <span class="string">&#x27;&#123;encodeDevice&#125;&#x27;</span>, <span class="string">&#x27;vms_encodeDevice_model&#x27;</span>, </span><br><span class="line">     <span class="keyword">null</span>, <span class="number">0</span>,                                  </span><br><span class="line">    <span class="number">0</span>, </span><br><span class="line">    <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">                                &quot;zeroChanCount&quot;: &quot;0&quot;,</span></span><br><span class="line"><span class="string">                                &quot;analogIoInCount&quot;: &quot;0&quot;,</span></span><br><span class="line"><span class="string">                                &quot;analogIoOutCount&quot;: &quot;0&quot;,</span></span><br><span class="line"><span class="string">                                &quot;digitalIoInCount&quot;: &quot;0&quot;,</span></span><br><span class="line"><span class="string">                                &quot;dataCollectStatus&quot;: &quot;1&quot;,</span></span><br><span class="line"><span class="string">                                &quot;digitalIoOutCount&quot;: &quot;0&quot;,</span></span><br><span class="line"><span class="string">                                &quot;analogChannelCount&quot;: &quot;0&quot;,</span></span><br><span class="line"><span class="string">                                &quot;digitalChannelCount&quot;: &quot;1&quot;</span></span><br><span class="line"><span class="string">                              &#125;&#x27;</span>, <span class="string">&#x27;sdmc&#x27;</span>, </span><br><span class="line">    <span class="number">1</span>, <span class="number">0</span>, now(), now(), </span><br><span class="line">    <span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">                                    );</span><br><span class="line"></span><br><span class="line">                            channelName :<span class="operator">=</span> devName <span class="operator">||</span> <span class="string">&#x27;_1&#x27;</span>;</span><br><span class="line">                            <span class="keyword">INSERT</span> <span class="keyword">INTO</span> public.tb_channel (channel_id, channel_index_code, channel_name, channel_num,</span><br><span class="line">                                                           channel_main_type,</span><br><span class="line">                                                           channel_sub_type, channel_capability, dev_index_code,</span><br><span class="line">                                                           region_index_code, description,</span><br><span class="line">                                                           com_id, ezviz_safe_watch_key,</span><br><span class="line">                                                           treaty_type,</span><br><span class="line">                                                           is_cascade, cascade_platform_code,</span><br><span class="line">                                                           dis_order,</span><br><span class="line">                                                           sync_iac, data_no, status, extended_attribute,</span><br><span class="line">                                                           business_class, create_time,</span><br><span class="line">                                                           update_time,</span><br><span class="line">                                                           channel_restype,</span><br><span class="line">                                                           creator, modifier)</span><br><span class="line">                            <span class="keyword">VALUES</span> (uuid_generate_v4(), uuid_generate_v4(), channelName, <span class="string">&#x27;1&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;camera&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;digital&#x27;</span>, <span class="string">&#x27;&#123;&#125;&#x27;</span>, devIndexCode,</span><br><span class="line">                                     regionIndexCode, <span class="keyword">null</span>, </span><br><span class="line">     <span class="string">&#x27;sdmc&#x27;</span>, <span class="keyword">null</span>,</span><br><span class="line">                                    <span class="keyword">null</span>, </span><br><span class="line">    <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, </span><br><span class="line">    id, </span><br><span class="line">    <span class="keyword">null</span>, id, <span class="number">0</span>, <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">                                &quot;osdStatus&quot;: &quot;0&quot;</span></span><br><span class="line"><span class="string">                              &#125;&#x27;</span>,</span><br><span class="line">                                    <span class="string">&#x27;vss_encodeDevice_camera&#x27;</span>, now(), </span><br><span class="line">    now(),</span><br><span class="line">    <span class="string">&#x27;&#123;camera&#125;&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;admin&#x27;</span>);</span><br><span class="line">                            devPort :<span class="operator">=</span> devPort <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                            regionResourceNum :<span class="operator">=</span> regionResourceNum <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                            if regionResourceNum <span class="operator">=</span> regionResourceLimit <span class="keyword">then</span></span><br><span class="line">                                offsetNum :<span class="operator">=</span> offsetNum <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">                                regionIndexCode :<span class="operator">=</span> <span class="keyword">null</span>;</span><br><span class="line">                                regionResourceNum :<span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">                            <span class="keyword">end</span> if;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                            if id <span class="operator">=</span> num_limit <span class="keyword">then</span></span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">                            <span class="keyword">end</span> if;</span><br><span class="line"></span><br><span class="line">                            id :<span class="operator">=</span> id <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">end</span> loop;</span><br><span class="line">                    devIpEnd2 :<span class="operator">=</span> devIpEnd2 <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">end</span> loop;</span><br><span class="line">            devIpEnd1 :<span class="operator">=</span> devIpEnd1 <span class="operator">+</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span> loop;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">$$</span><br><span class="line">    <span class="keyword">LANGUAGE</span> plpgsql;</span><br></pre></td></tr></table></figure><p>2）插入10w记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> insertDeviceChannels(<span class="number">100000</span>);</span><br></pre></td></tr></table></figure><p>3)删除指定记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tb_device <span class="keyword">where</span> region_index_code <span class="operator">=</span> <span class="string">&#x27;219f98dd-a83a-468f-a2c0-3a30cd2e6082&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.pgadmin工具&lt;/p&gt;
&lt;p&gt;2.增删改查&lt;/p&gt;
&lt;p&gt;​    插入批量记录：&lt;/p&gt;
&lt;p&gt;​    1）生成insertDeviceChannels&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class</summary>
      
    
    
    
    <category term="数据库" scheme="https://hxlpub.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="postgres" scheme="https://hxlpub.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/postgres/"/>
    
    
  </entry>
  
  <entry>
    <title>工具使用</title>
    <link href="https://hxlpub.github.io/2021/09/14/git_tools/"/>
    <id>https://hxlpub.github.io/2021/09/14/git_tools/</id>
    <published>2021-09-14T09:26:07.000Z</published>
    <updated>2021-10-20T12:49:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>1.把github上面的仓库克隆到本地</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 仓库</span><br></pre></td></tr></table></figure><p>2.上传本地的项目到github仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git add * #可将当前目录下文件添加到暂存区</span><br><span class="line">git add [file1] [file2] ...#添加一个或多个文件到暂存区</span><br><span class="line">git add [dir]#添加指定目录到暂存区，包括子目录</span><br><span class="line">git add .#添加当前目录下的所有文件到暂存区</span><br><span class="line">git commit  -m  &quot;提交信息&quot;  （注：“提交信息”里面换成你需要，如“first commit”）</span><br><span class="line">git push -u origin master   （注：此操作目的是把本地仓库push到github上面，此步骤需要你输入帐号和密码，这里的账号和密码是你的github的账号和密码，你第一次上传的话可能会需要你输密码）</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.把github上面的仓库克隆到本地&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td </summary>
      
    
    
    
    <category term="开发工具" scheme="https://hxlpub.github.io/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    <category term="版本管理" scheme="https://hxlpub.github.io/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"/>
    
    <category term="git" scheme="https://hxlpub.github.io/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/git/"/>
    
    
  </entry>
  
  <entry>
    <title>实现从Linux服务器获取windows文件</title>
    <link href="https://hxlpub.github.io/2021/09/14/linux/"/>
    <id>https://hxlpub.github.io/2021/09/14/linux/</id>
    <published>2021-09-14T09:26:07.000Z</published>
    <updated>2021-10-29T03:36:18.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h5><p>​    工作中需要从Linux服务器端去拿windows端的文件，linux服务器之间底层互传文件可以用scp很容易实现，但是</p><p>不同的操作系统之间实现文件传输,如，windows 和linux之间，又如何实现呢？</p><ul><li><p>子问题1</p><ul><li>描述：ftp ip 需要手动输入win ftpserver所在的win用户名密码后才可以执行抓取等操作，怎么能跳过手动的验证？</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost AuthServer]# ftp 10.192.44.183</span><br><span class="line">Connected to 10.192.44.183 (10.192.44.183).</span><br><span class="line">220 Microsoft FTP Service</span><br><span class="line">Name (10.192.44.183:root): linhongxun</span><br><span class="line">331 Password required</span><br><span class="line">Password:</span><br><span class="line">230 User logged in.</span><br><span class="line">Remote system type is Windows_NT.</span><br><span class="line"><span class="meta">ftp&gt;</span><span class="bash"> </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>解决方案：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">ftp -n &lt;&lt;- EOF</span><br><span class="line"><span class="meta">#</span><span class="bash">win 端IP</span></span><br><span class="line">open ip</span><br><span class="line"><span class="meta">#</span><span class="bash">win 端用户名密码</span></span><br><span class="line">user username password</span><br><span class="line"><span class="meta">#</span><span class="bash">传输格式</span></span><br><span class="line">ascii(or bin)</span><br><span class="line"><span class="meta">#</span><span class="bash">操作</span></span><br><span class="line">put *(or get)</span><br><span class="line"><span class="meta">#</span><span class="bash">退出</span></span><br><span class="line">bye</span><br><span class="line">EOF</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li><p>子问题2：</p></li></ul><h5 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h5><ul><li><p>ftp：需要在windows端搭建ftpserver服务，在linux端安装ftp工具</p></li><li><p>scp</p><p>工作中使用了ftp的方案，本文着重讲解ftp实现从Linux服务器获取windows文件</p></li></ul><h5 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h5><h6 id="windows-端搭建ftpserver"><a href="#windows-端搭建ftpserver" class="headerlink" title="windows 端搭建ftpserver"></a>windows 端搭建ftpserver</h6><p>​        问一下度娘，很简单，在这不耽误时间，<a href="https://blog.csdn.net/weixin_37554536/article/details/83892709?spm=1001.2014.3001.5506">推荐</a></p><h6 id="Linux-端安装ftp工具"><a href="#Linux-端安装ftp工具" class="headerlink" title="Linux 端安装ftp工具"></a>Linux 端安装ftp工具</h6><ul><li>rpm包方式安装</li><li>yum 安装<ul><li>yum list |grep ftp #查看可安装版本ftp</li><li>yum install ftp…</li></ul></li></ul><h6 id="ftp实现抓取windows端的文件到指定路径"><a href="#ftp实现抓取windows端的文件到指定路径" class="headerlink" title="ftp实现抓取windows端的文件到指定路径"></a>ftp实现抓取windows端的文件到指定路径</h6><p>​        example:实现将win端的路径下文件cp 到linux端同一路径下：downloadjson.sh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="variable">$1</span> 是第一个参数，即路径，执行的脚本为: ./downloadjson.sh  /nas/<span class="built_in">test</span>/<span class="built_in">test</span>/DocumentVoucher.json</span></span><br><span class="line">param1=`echo $1 |awk -F &quot;DocumentVoucher&quot; &#x27;&#123;printf $1&#125;&#x27;`</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">echo</span> <span class="variable">$&#123;param1&#125;</span></span></span><br><span class="line">ftp -n &lt;&lt;- EOF</span><br><span class="line">open ftpserverip</span><br><span class="line">user username password</span><br><span class="line">ascii</span><br><span class="line">cd  $&#123;param1&#125;</span><br><span class="line">get  DocumentVoucher.json</span><br><span class="line">bye</span><br><span class="line">EOF</span><br><span class="line">mkdir -p $&#123;param1&#125;</span><br><span class="line">cp DocumentVoucher.json $&#123;param1&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="go语言执行脚本"><a href="#go语言执行脚本" class="headerlink" title="go语言执行脚本"></a>go语言执行脚本</h6><p>​        项目中，上层应用是http 协议，目的是请求到含有文件路径报文的同时，将文件下载到Linux服务器端，故在http协议绑定的接口函数里面实现了执行该脚本,逻辑如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">command := <span class="string">&quot;./downloadjson.sh &quot;</span> + documentPath</span><br><span class="line">fmt.Println(command)</span><br><span class="line">cmd := exec.Command(<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, command)</span><br><span class="line">bytes, err := cmd.Output()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">  &#125;</span><br><span class="line">resp := <span class="keyword">string</span>(bytes)</span><br><span class="line">   fmt.Println(resp)</span><br></pre></td></tr></table></figure><h6 id="常见问题FAQ"><a href="#常见问题FAQ" class="headerlink" title="常见问题FAQ"></a>常见问题FAQ</h6><ol><li><p>​    ftp ip 时连接超时</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost AuthServer]# ftp 10.192.44.183</span><br><span class="line">ftp: connect: Connection timed out</span><br><span class="line"><span class="meta">ftp&gt;</span><span class="bash"> </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>解决方案：关闭win端的防火墙</p></li></ol><h6 id="ftp常用指令"><a href="#ftp常用指令" class="headerlink" title="ftp常用指令"></a>ftp常用指令</h6><ol><li><p>连接ftp服务器<br>　　格式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftp [hostname| ip-address]</span><br></pre></td></tr></table></figure><p>　　a)在linux命令行下输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftp 192.168.26.66</span><br></pre></td></tr></table></figure><p>　　b)服务器询问你用户名和口令，分别输入用户名和相应密码，待认证通过即可。</p></li></ol><p>　2. 下载文件</p><p>　　下载文件通常用get和mget这两条命令。<br>　　a) get<br>　　格式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get [remote-file] [local-file]</span><br></pre></td></tr></table></figure><p>　　将文件从远端主机中传送至本地主机中.<br>　　如要获取服务器上e:\rose\1.bmp,则</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">ftp&gt;</span><span class="bash"> get /rose/1.bmp 1.bmp (回车)</span></span><br></pre></td></tr></table></figure><p>　　b) mget　　　　　　<br>　　格式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mget [remote-files]</span><br></pre></td></tr></table></figure><p>　　从远端主机接收一批文件至本地主机.<br>　　如要获取服务器上e:\rose\下的所有文件,则</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">ftp&gt;</span><span class="bash"> <span class="built_in">cd</span> /rose</span></span><br><span class="line"><span class="meta">ftp&gt;</span><span class="bash"> mget *.* (回车)</span></span><br></pre></td></tr></table></figure><p>　　注意：文件都下载到了linux主机的当前目录下。比如，在　/root/yint下运行的ftp命令，则文件都下载到了/root/yint 下。</p><p>　3.上传文件</p><p>　　a) put</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">格式：put local-file [remote-file]</span><br></pre></td></tr></table></figure><p>　　将本地一个文件传送至远端主机中.<br>　　如要把本地的1.bmp传送到远端主机e:\rose,并改名为333.bmp</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">　ftp&gt;</span><span class="bash"> put 1.bmp /rose/333.bmp (回车)</span></span><br></pre></td></tr></table></figure><p>　　b) mput</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">格式：mput local-files</span><br></pre></td></tr></table></figure><p>　　将本地主机中一批文件传送至远端主机.<br>　　如要把本地当前目录下所有bmp文件上传到服务器e:\rose 下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">ftp&gt;</span><span class="bash"> <span class="built_in">cd</span> /rose （回车）</span></span><br><span class="line"><span class="meta">ftp&gt;</span><span class="bash"> mput *.bmp　（回车）</span></span><br></pre></td></tr></table></figure><p>　　注意：上传文件都来自于主机的当前目录下。比如，在　/root/test下运行的ftp命令，则只有在/root/test下的文件linux才会 上传到服务器e:\rose 下。</p><p>　4. 断开连接<br>　　bye：中断与服务器的连接。</p><p>　　<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">　　　ftp&gt;</span><span class="bash"> <span class="built_in">bye</span> (回车)</span></span><br></pre></td></tr></table></figure></p><h6 id="scp常用"><a href="#scp常用" class="headerlink" title="scp常用"></a>scp常用</h6><p>​        scp是安全的文件拷贝，基于ssh的登录</p><p>​        假定你想把本地计算机/home下的一个名为a.tar.tz的文件拷贝到远程服务器192.168.0.2上的/home/tmp。而且你在远程服务器 上的帐号名为root。可以用这个命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp /home/a.tar.tz root@192.168.0.2:/home/tmp/</span><br></pre></td></tr></table></figure><p>​        如果把文件从远程机器拷贝到本机当前目录用这个命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp root@192.168.0.2:/home/a.tar.tz</span><br></pre></td></tr></table></figure><p>​        拷贝远程机器的整个目录下的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r root@192.168.0.2：/home/* ./</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h5&gt;&lt;p&gt;​    工作中需要从Linux服务器端去拿windows端的文件，linux服务器之间底层互传文件可以用scp很容易实现，</summary>
      
    
    
    
    <category term="服务端" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    <category term="Linux" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/Linux/"/>
    
    <category term="文件传输" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/Linux/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux工具</title>
    <link href="https://hxlpub.github.io/2021/09/14/linux_command_tools/"/>
    <id>https://hxlpub.github.io/2021/09/14/linux_command_tools/</id>
    <published>2021-09-14T09:26:07.000Z</published>
    <updated>2022-02-22T07:17:17.731Z</updated>
    
    <content type="html"><![CDATA[<h5 id="目录文件管理"><a href="#目录文件管理" class="headerlink" title="目录文件管理"></a>目录文件管理</h5><h6 id="目录管理"><a href="#目录管理" class="headerlink" title="目录管理"></a>目录管理</h6><p>​        </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">1.列出目录文件名</span><br><span class="line">ls/ll</span><br><span class="line">1、ls -al ~:将家目录下的所有文件列出来（含属性与隐藏文件）</span><br><span class="line">2、ls -alF --color=never:不显示颜色，文件名末尾显示文件名代表的类型</span><br><span class="line">3、ls -al  --full-time ~ ：完整呈现文件的修改时间</span><br><span class="line">权限说明</span><br><span class="line">drwxr-xr-x   2 root root   4096 Jul 20  2017 Documents</span><br><span class="line">第一栏drwxr-xr-x:类型与权限</span><br><span class="line">     第一个字符表示文件是目录或文件或链接等等</span><br><span class="line">     [d]:目录</span><br><span class="line">     [-]:文件</span><br><span class="line">     [l]:链接</span><br><span class="line">     [b]:装置文件里可供存储的接口设备（可随机存取装置）</span><br><span class="line">     [c]:装置文件里串行端口设备，如键盘鼠标（一次性读取装 置）</span><br><span class="line">     剩余字符以三个为一组：均为rwx三个参数组合</span><br><span class="line">        r可读：4</span><br><span class="line">        w可写:2</span><br><span class="line">        x可执行:1</span><br><span class="line">        没有权限则-:0</span><br><span class="line">     drwxr-xr-x:   rwx=4+2+1=7</span><br><span class="line">                   r-x:4+0+1=5</span><br><span class="line">                   r-x:4+0+1=5</span><br><span class="line">    则该文件的权限数字是755</span><br><span class="line">    第一组：文件拥有者权限</span><br><span class="line">    第二组：加入此群组账号的权限</span><br><span class="line">    第三组：非本人且未加入本群组的其他账号的权限</span><br><span class="line">第二栏 表示有多少档名连接到此节点（i_node） </span><br><span class="line">第三栏 表示文件或者目录的拥有者账号</span><br><span class="line">第四栏 表示文件所属群组</span><br><span class="line">第五栏 表示文件容量大小，默认单位bytes</span><br><span class="line">第六栏 表示文件的件当日期或最近修改日期</span><br><span class="line">第七栏 表示文档的名字</span><br><span class="line">2.切换目录</span><br><span class="line">cd</span><br><span class="line">1、cd /usr/bin: 绝对路径，以根目录/开头</span><br><span class="line">2、cd bin:在usr下，相对路径，相对于当前目录</span><br><span class="line">3、cd ～：切换到目前用户所在家目录</span><br><span class="line">4、cd .   :目前所在目录</span><br><span class="line">5、cd ..  :切换至目前目录的上一层目录</span><br><span class="line">6、cd ../.. :切换至上上层目录</span><br><span class="line">7、cd ~account :切换到目前用户account所在家目录/home/account</span><br><span class="line">8、cd ../dir:切换到与本目录并列的另一个目录</span><br><span class="line">9、cd -:回到之前的目录</span><br><span class="line">3.显示当前目录</span><br><span class="line">pwd</span><br><span class="line">4.创建一个新目录</span><br><span class="line">mkdir</span><br><span class="line">5.删除一个空目录</span><br><span class="line">rmdir</span><br></pre></td></tr></table></figure><h6 id="传输文件"><a href="#传输文件" class="headerlink" title="传输文件"></a>传输文件</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1.wget</span><br><span class="line">从URL获取文件</span><br><span class="line">wget URL #下载URL指定的文件</span><br><span class="line">ex: wget www.baidu.com #下载百度网页</span><br><span class="line">     wget  -O  filename  URL #从URL获取文件并重命名filename,filename包含路径</span><br><span class="line">ex：wget http://mirrors.hikvision.com.cn/help/centos/7/CentOS-Base.repo -O /etc/yum.repos.d/CenOS-Base.repo  #配置hik yum源</span><br><span class="line"> wget -o log URL#注意o与O区别，o为写日志log（怎么获取文件的过程，包括解析、建立连接、传文件等），O为文件名</span><br><span class="line">2.ftp</span><br><span class="line">子主题 1</span><br><span class="line">子主题 2</span><br><span class="line">3.scp</span><br><span class="line">用于 Linux 之间复制文件和目录</span><br><span class="line">scp [可选参数] file_source file_target </span><br><span class="line">1、scp /home/space/music/1.mp3 IP:/home/root/others/music （本地到远程）</span><br><span class="line">2、scp -P 55555 IP:/usr/local/sin.sh  /home/administrator（远程到本地）</span><br></pre></td></tr></table></figure><h6 id="创建文件、文件链接"><a href="#创建文件、文件链接" class="headerlink" title="创建文件、文件链接"></a>创建文件、文件链接</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.touch filename#从无到有创建文件</span><br><span class="line">2.cp file file.bak #备份</span><br><span class="line">3.ln -sf  /dev/dm-30  /dev/cvr_vg/lun1  (ln -sf  目的地   链接)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h6><p>​        </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf  filename #r：递归，f：强制删除，不提示</span><br></pre></td></tr></table></figure><h6 id="更改文件"><a href="#更改文件" class="headerlink" title="更改文件"></a>更改文件</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">1.重命名</span><br><span class="line">​mv filename newfilename#将文件filename重命名为newfilename</span><br><span class="line">2.更改文件属性</span><br><span class="line">​chattr</span><br><span class="line">​语法</span><br><span class="line">​chattr [-RV][-v&lt;版本编号&gt;][+/-/=&lt;属性&gt;][文件或目录...]</span><br><span class="line">​参数</span><br><span class="line">​-R 递归处理，将指定目录下的所有文件及子目录一并处理。</span><br><span class="line"></span><br><span class="line">　　   -v&lt;版本编号&gt; 设置文件或目录版本。</span><br><span class="line"></span><br><span class="line">　　          -V 显示指令执行过程。</span><br><span class="line"></span><br><span class="line">　　          +&lt;属性&gt; 开启文件或目录的该项属性。</span><br><span class="line"></span><br><span class="line">　　          -&lt;属性&gt; 关闭文件或目录的该项属性。</span><br><span class="line"></span><br><span class="line">　            =&lt;属性&gt; 指定文件或目录的该项属性。</span><br><span class="line">属性</span><br><span class="line">a：让文件或目录仅供附加用途。</span><br><span class="line">b：不更新文件或目录的最后存取时间。</span><br><span class="line">c：将文件或目录压缩后存放。</span><br><span class="line">d：将文件或目录排除在倾倒操作之外。</span><br><span class="line">i：不得任意更动文件或目录。</span><br><span class="line">s：保密性删除文件或目录。</span><br><span class="line">S：即时更新文件或目录。</span><br><span class="line">u：预防意外删除。</span><br><span class="line">示例</span><br><span class="line">chattr +i /etc/resolv.conf#用chattr命令防止系统中某个关键文件被修改</span><br><span class="line">chattr +a /var/log/messages#让某个文件只能往里面追加数据，但不能删除，适用于各种日志文件</span><br><span class="line">3.更改文件权限</span><br><span class="line">chmod</span><br><span class="line">格式</span><br><span class="line">chmod [-cfvR] [--help] [--version] mode file...</span><br><span class="line">参数</span><br><span class="line">mode : 权限设定字串</span><br><span class="line">[ugoa...][[+-=][rwxX]...][,...]#格式</span><br><span class="line">其中：</span><br><span class="line"></span><br><span class="line">u 表示该文件的拥有者，g 表示与该文件的拥有者属于同一个群体(group)者，o 表示其他以外的人，a 表示这三者皆是。</span><br><span class="line"></span><br><span class="line">+ 表示增加权限、- 表示取消权限、= 表示唯一设定权限。</span><br><span class="line">  r 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该文件是个子目录或者该文件已经被设定过为可执行。</span><br><span class="line">  其他参数说明：</span><br><span class="line"></span><br><span class="line">-c : 若该文件权限确实已经更改，才显示其更改动作</span><br><span class="line">-f : 若该文件权限无法被更改也不要显示错误讯息</span><br><span class="line">-v : 显示权限变更的详细资料</span><br><span class="line">-R : 对目前目录下的所有文件与子目录进行相同的权限变更(即以递归的方式逐个变更)</span><br><span class="line">--help : 显示辅助说明</span><br><span class="line">         --version : 显示版本</span><br><span class="line">示例</span><br><span class="line">chmod ugo+r file1.txt#将文件 file1.txt 设为所有人皆可读取</span><br><span class="line">chmod ug+w,o-w file1.txt file2.txt#将文件 file1.txt 与 file2.txt 设为该文件拥有者，与其所属同一个群体者可写入，但其他以外的人则不可写入</span><br><span class="line">chmod -R a+r *#将目前目录下的所有文件与子目录皆设为任何人可读取 </span><br><span class="line">chmod a=rwx file  == chmod 777 file</span><br></pre></td></tr></table></figure><h6 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">1.cat</span><br><span class="line">从头到尾显示文件内容</span><br><span class="line">cat 文件 #从头到尾显示整个文件内容，当文件很大时，终端无法完全显示其所有内容</span><br><span class="line">cat -n  文件 #查看文件内容的同时添加行号</span><br><span class="line">三大功能</span><br><span class="line">1.cat 文件 #一次显示整个文件</span><br><span class="line">2.cat &gt; 文件 #从键盘创建一个文件,只能创建新文件，不能编辑已有文件，执行命令后会进入文件编辑，每次都会覆盖旧的内容</span><br><span class="line">3.cat file1 file2 &gt; file#将几个文件合并为一个文件 </span><br><span class="line">2.more</span><br><span class="line">分屏显示文件</span><br><span class="line">more 文件 #分屏显示文件内容，空格：向下翻页，b：向上翻页，q：退出</span><br><span class="line">3.less</span><br><span class="line">分屏显示文件，同more</span><br><span class="line">4.head</span><br><span class="line">从头开始查看文件内容</span><br><span class="line">head 文件 #显示文件头部，默认10行</span><br><span class="line">head -n 行数 文件#查看文件的前10行</span><br><span class="line">5.tail</span><br><span class="line">与head相反</span><br><span class="line">6.file</span><br><span class="line">观察文件类型,某个文件的基本数据</span><br><span class="line"></span><br><span class="line">    file file</span><br><span class="line"></span><br><span class="line">    文件类型诸如,ASCII，data文件，binary文件等</span><br><span class="line"></span><br><span class="line">    file file</span><br><span class="line"></span><br><span class="line">7.查看文件格式</span><br><span class="line">:set ff #进入到文件，vi/vim 文件后执行:set ff</span><br></pre></td></tr></table></figure><h6 id="搜索文件"><a href="#搜索文件" class="headerlink" title="搜索文件"></a>搜索文件</h6><p>​        </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1.find</span><br><span class="line">find  path -option  ...</span><br><span class="line">find . -type f#将当前目录及其子目录中的所有文件列出</span><br><span class="line">find . -name &quot;*.c&quot;#将当前目录及其子目录下所有文件后缀为 .c 的文件列出来</span><br><span class="line">常用：find / -name filename</span><br><span class="line">2.which </span><br><span class="line">寻找执行档</span><br><span class="line">which  command</span><br><span class="line">-a :将所有由PATH目录中可以找到的指令均列出，而不止第一份被找到的指令名称</span><br><span class="line">1、which ifconfig :找出ifconfig命令的执行文件位置</span><br><span class="line">3.whereis</span><br><span class="line">文件档名的查找，由一些特定的目录中</span><br><span class="line"> 寻找文件文件名</span><br><span class="line"> whereis [-bmsu] 文件或目录名</span><br><span class="line"> </span><br><span class="line">-l：列出whereis 会去查询的几个主要目录而已</span><br><span class="line">-b:只找binary文件</span><br><span class="line">-m:只找在说明文件manual路径下的文件</span><br><span class="line">-s:只找source 来源文件</span><br><span class="line">-u:搜寻不在上述三个项目 中的其他特殊文件</span><br><span class="line">1、whereis ifconfig</span><br><span class="line">4.根据文件中字符串搜索文件</span><br><span class="line">grep -rn &quot;字符串&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="比较文件"><a href="#比较文件" class="headerlink" title="比较文件"></a>比较文件</h6><p>​        </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.diff   </span><br><span class="line">diff 选项 文件一  文件二  </span><br></pre></td></tr></table></figure><h5 id="分割文件"><a href="#分割文件" class="headerlink" title="分割文件"></a>分割文件</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">split</span><br><span class="line">命令用于将一个文件分割成数个</span><br><span class="line">    -b:指定每多少字节切成一个小文件</span><br><span class="line">1、split -b 1024m txst.txt -d -a 2 test.txt_</span><br></pre></td></tr></table></figure><h6 id="编辑文件"><a href="#编辑文件" class="headerlink" title="编辑文件"></a>编辑文件</h6><p>vim</p><p>​    常用快捷方式：</p><p>​    </p><h5 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.&gt;&gt;</span><br><span class="line">输出重定向</span><br><span class="line">example: vmstat 3 &gt;&gt; test#vmstat输出重定向到文件test</span><br></pre></td></tr></table></figure><h5 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">1.top</span><br><span class="line">实时显示 process 的动态</span><br><span class="line">top [-d 数字]  |top [-bnp]</span><br><span class="line"></span><br><span class="line">-d:后接秒数，更新的秒数</span><br><span class="line">-b:以批次的方式执行</span><br><span class="line">-n:与-b搭配表示需要进行几次top的输出结果</span><br><span class="line">-p 指定某些个PID观察</span><br><span class="line"></span><br><span class="line">1、top -d 2</span><br><span class="line">说明:</span><br><span class="line">第一行：目前的时间，经过的时间，登录用户数，在1,5,15分钟的平均负载</span><br><span class="line">第二行：显示目前进程总数和个别进程状态</span><br><span class="line">第三行： 显示CPU的整体负载</span><br><span class="line">第四行第五行：物理内存和虚拟内存使用情况（虚拟内存来源？？)</span><br><span class="line">第六：输入指令时显示状态的地方</span><br><span class="line">2、top -b -n 2 &gt;/tmp/top.txt#2次输出结果到文件</span><br><span class="line">3、top -d 2 -p PID #持续观察该PID</span><br><span class="line"></span><br><span class="line">2.ps</span><br><span class="line">显示某个时间点的进程运作情况</span><br><span class="line">ps [options] </span><br><span class="line"></span><br><span class="line">-A:显示所有process,同-e</span><br><span class="line">-a:不与terminal相关的process</span><br><span class="line">-u：有效使用者相关的pro</span><br><span class="line">x:通常与a一起用列出较完整信息</span><br><span class="line">l :详细讲该PID信息列出</span><br><span class="line">j:工作的格式</span><br><span class="line">-f：更完整的输出</span><br><span class="line"> 1、ps -l  仅仅观察自己bash相关的进程</span><br><span class="line">        说明：</span><br><span class="line">        F：进程旗标，总结权限，常见号码4:表示进程权限root</span><br><span class="line">            1:表示仅复制而没有实际执行</span><br><span class="line">        S：表示状态</span><br><span class="line">            R：运行中 </span><br><span class="line">            S：睡眠</span><br><span class="line">           D：不可唤醒，可能在等待IO的情况</span><br><span class="line">           T：停止</span><br><span class="line">          Z:僵尸状态，已经终止但无法移除到内存外</span><br><span class="line">        UID/PID/PPID:代表此进程被该UID所拥有，进程的PID号码，此进程的PID号码</span><br><span class="line">        C：Cpu 使用率</span><br><span class="line">        PRI/NI :priority/nice优先级，越小越优先</span><br><span class="line">        ADDR/SZ/WCHAN：内存相关,内存部分，用掉多少内存，是否在运作</span><br><span class="line">        TTY：终端机位置，远程则pts/n</span><br><span class="line">        TIME:使用掉的CPU时间</span><br><span class="line">        CMD：造成此进程的程序的指令</span><br><span class="line">        2、ps aux#观察系统所有进程</span><br><span class="line">        USR;使用者账号</span><br><span class="line">        MEM：物理内存占比</span><br><span class="line">        VSZ：耗掉的虚拟内存</span><br><span class="line">        RSS：占用的固定内存</span><br><span class="line">3、ps -lA#显示所有进程</span><br><span class="line">4.free</span><br><span class="line">用于显示内存状态</span><br><span class="line">5.查看cpu </span><br><span class="line">cat /proc/cpuinfo</span><br><span class="line">6.查看内核</span><br><span class="line">uname -r</span><br><span class="line">7.查看系统</span><br><span class="line">cat /etc/redhat-release （redhat）</span><br><span class="line">8.进程管理</span><br><span class="line">Kill -s  9  进程号#杀掉进程</span><br><span class="line">9.查看目录占用者并解除占用</span><br><span class="line">stat /root/hu</span><br><span class="line">10.systemctl</span><br><span class="line">一、systemd 系统初始化程序，系统开始的第一个进程，pid为1 </span><br><span class="line">二、systemctl命令 </span><br><span class="line">systemctl list-units ##列出当前系统服务的状态 </span><br><span class="line">    systemctl list-unit-files ##列出服务的开机状态 </span><br><span class="line">    systemctl status sshd ##查看指定服务的状态 </span><br><span class="line">    systemctl stop sshd ##关闭指定服务 </span><br><span class="line">    systemctl start sshd ##开启指定服务 </span><br><span class="line">    systemctl restart sshd ##从新启动服务 </span><br><span class="line">    systemctl enable sshd ##设定指定服务开机开启 </span><br><span class="line">    systemctl disable sshd ##设定指定服务开机关闭 </span><br><span class="line">    systemctl reload sshd ##使指定服务从新加载配置 </span><br><span class="line">    systemctl list-dependencies sshd ##查看指定服务的倚赖关系 </span><br><span class="line">    systemctl mask sshd ##冻结指定服务 </span><br><span class="line">    systemctl unmask sshd ##启用服务 </span><br><span class="line">    systemctl set-default multi-user.target ##开机不开启图形 </span><br><span class="line">    systemctl set-default graphical.target ##开机启动图形 </span><br><span class="line">    setterm ##文本界面设定color </span><br><span class="line"> 三、服务状态 </span><br><span class="line"> systemctl status 服务名称 </span><br><span class="line"> loaded ##系统服务已经初始化完成，加载过配置 </span><br><span class="line"> active（running） ##正有一个或多个程序正在系统中执行， vsftpd就是这种模式 </span><br><span class="line"> atcive（exited） ##僅執行一次就正常結束的服務， 目前並沒有任何程序在系統中執行 </span><br><span class="line"> atcive（waiting） ##正在執行當中，不過還再等待其他的事件才能继续处理 </span><br><span class="line"> inactive ##服务关闭 enbaled ##服务开机启动 </span><br><span class="line"> disabled ##服务开机不自启 </span><br><span class="line"> static ##服务开机启动项不可被管理 </span><br><span class="line"> failed ##系统配置错误 </span><br><span class="line">11.pstree</span><br><span class="line">查看Linux下systemd启动了哪些服务</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  pstree  [options]</span><br><span class="line">-a #包含命令行参数</span><br><span class="line">-c #展开相同的子树</span><br><span class="line">-H [PID] #突出特定过程</span><br><span class="line">-g #显示进程组ID</span><br><span class="line">-n #使用PID排序</span><br><span class="line">pstree  用户  #显示特定用户的进程树</span><br><span class="line">-s [PID ] #限制显示一个特定的过程</span><br><span class="line"></span><br><span class="line">12.查看内存型号</span><br><span class="line">dmidecode -t memory</span><br><span class="line"></span><br><span class="line">13.排名前10的内存CPU消耗</span><br><span class="line">ps auxw|head -1;ps auxw|sort -rn -k3|head -10</span><br><span class="line">14.释放内存</span><br><span class="line">如果内存太少， 可以把占用内存多的程序停掉， 然后执行这个命令释放： echo 3 &gt;/proc/sys/vm/drop_caches </span><br><span class="line">释放完后再改回去： echo 1 &gt;/proc/sys/vm/drop_caches</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="系统设置"><a href="#系统设置" class="headerlink" title="系统设置"></a>系统设置</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">子主题 1</span><br><span class="line">子主题 2</span><br><span class="line">子主题 3</span><br></pre></td></tr></table></figure><h5 id="磁盘、设备管理"><a href="#磁盘、设备管理" class="headerlink" title="磁盘、设备管理"></a>磁盘、设备管理</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">1.df</span><br><span class="line">列出文件系统的整体磁盘使用量</span><br><span class="line">df [-ahikHTm][目录或文件名]</span><br><span class="line">-a:列出所有文件系统，包括系统特有的/proc等文件系统</span><br><span class="line">-k:以KBytes的容量显示文件系统</span><br><span class="line">-m:以MBytes的容量显示文件系统</span><br><span class="line">-h：以人们交易阅读的的GB、MB、KB等格式自行显示</span><br><span class="line">-H：以M=1000K取代M=1024K 的进位方式</span><br><span class="line">-T：连同该partition的filesystem名称列出</span><br><span class="line">-i:不用磁盘容量而以inode数量表示</span><br><span class="line">1、df:列出系统内所有filesystem列出来</span><br><span class="line">    filesystem:表示文件系统是哪个partition</span><br><span class="line">   1k-blocks:表示单位1KB，可用-h或-m改变容量</span><br><span class="line">   Used:使用掉的磁盘空间</span><br><span class="line">   Available:剩下的磁盘空间</span><br><span class="line">  Use%:磁盘的使用率</span><br><span class="line">  Mounted on :磁盘挂载的目录（挂载点） </span><br><span class="line">2、df  -h:易读显示</span><br><span class="line">3、df -aT:将系统内所有特殊文件格式以及名称列出来</span><br><span class="line">4、df -h /etc：将/etc下可用的磁盘以易读的容量格式显示出来</span><br><span class="line">5、df -ih：将目前的各个partition当中可用的inode数量列出</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2.lsblk</span><br><span class="line"></span><br><span class="line">list block device</span><br><span class="line"></span><br><span class="line">观察磁盘分区状态</span><br><span class="line"></span><br><span class="line">lsblk [-dfimpt] device</span><br><span class="line"></span><br><span class="line">-d:仅列出磁盘本身,无分区</span><br><span class="line">-f:含文件系统名称</span><br><span class="line">-i：使用ASCII的线段输出</span><br><span class="line">-m：输出权限数据</span><br><span class="line">-p:列出完整文件名 </span><br><span class="line">-t:列出详细数据。包括磁盘队列机制与读写的数据量大小</span><br><span class="line"></span><br><span class="line">1、lsblk -ip /dev/sdb</span><br><span class="line">3.blkid</span><br><span class="line">对系统的块设备（包括交换分区）</span><br><span class="line">所使用的文件系统类型、LABEL、UUID等信息进行查询</span><br><span class="line"></span><br><span class="line">4.挂载镜像</span><br><span class="line">  1、sudo losetup /dev/loop0 iVMS-HG-H16_CN_STD_9.2.0_V2.3.8_iSC_V1.5.100_201026_platformactive_base.img</span><br><span class="line">  2、 kpartx -av /dev/loop0</span><br><span class="line">  3、 kpartx -d /dev/loop0</span><br><span class="line">  4、losetup  -d  /dev/loop0</span><br><span class="line">5.调整分区</span><br><span class="line">fdisk </span><br><span class="line">1.fdisk /dev/hda </span><br><span class="line">    p：打印分区 </span><br><span class="line">    d：删除分区</span><br><span class="line">    n:新增分区</span><br><span class="line">    2.格式化分区</span><br><span class="line">    mkfs.ext4   /dev/..</span><br><span class="line">    3.挂载分区</span><br><span class="line">    mount /dev/... 挂载点</span><br><span class="line">6.激活网卡</span><br><span class="line">ifup eth0 </span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="磁盘维护"><a href="#磁盘维护" class="headerlink" title="磁盘维护"></a>磁盘维护</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1.dd</span><br><span class="line">备份(直接读取扇区sector)制作文件</span><br><span class="line">dd if=&quot;input_file&quot; of=&quot;output_file&quot;  bs=&quot;blocksize&quot; count=blocknum</span><br><span class="line">     if：输入文件名，默认为标准输入。即指定源文件或设备。</span><br><span class="line">of：输出文件名，默认为标准输出。即指定目的文件或设备。</span><br><span class="line">count：多少的bs</span><br><span class="line">bs：一个block大小         </span><br><span class="line">1、dd if=/etc/passwd of=/etc/passwd.back #备份文件</span><br><span class="line">2、dd if=/dev/sdb of=/tmp/system.iso#将光驱内容备份下来</span><br><span class="line">3、dd if=/tmp/system.iso  of=/dev/sdb#将镜像备份到设备</span><br><span class="line">4、将/boot整个文件系统透过dd备份下来</span><br><span class="line">   df -h /boot#获取设备/dev/...</span><br><span class="line">   dd if=/dev/… of=/tmp/….img</span><br><span class="line">子主题 2</span><br><span class="line">子主题 3</span><br></pre></td></tr></table></figure><h5 id="网络通讯、系统性能"><a href="#网络通讯、系统性能" class="headerlink" title="网络通讯、系统性能"></a>网络通讯、系统性能</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line">1.iostat</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">I/O statistics</span><br><span class="line">（输入/输出统计）</span><br><span class="line"></span><br><span class="line">输出CPU和磁盘I/O相关的统计信息监控系统的IO状态</span><br><span class="line"></span><br><span class="line"> iostat [ options ] [ &lt;interval&gt; [ &lt;count&gt; ] ]</span><br><span class="line"></span><br><span class="line">-c：查看CPU部分状态信息</span><br><span class="line">-k:某些使用block为单位的列强制使用Kilobytes为单位</span><br><span class="line">-d 参数，显示设备（磁盘）使用状态</span><br><span class="line">-x 参数，输出更多详细信息</span><br><span class="line"></span><br><span class="line">1、iostat -c</span><br><span class="line">2、iostat -k 1 10</span><br><span class="line">3、iostat  -d 1 3</span><br><span class="line">4、iostat -x 1 2</span><br><span class="line">说明：</span><br><span class="line">磁盘属性</span><br><span class="line">tps：该设备每秒的传输次数“一次传输”意思是“一次I/O请求”。多个逻辑请求可能会被合并为“一次I/O请求”。“一次传输”请求的大小是未知的。</span><br><span class="line">kB_read/s：每秒从设备（drive expressed）读取的数据量；</span><br><span class="line">kB_wrtn/s：每秒向设备（drive expressed）写入的数据量；</span><br><span class="line">kB_read：读取的总数据量；kB_wrtn：写入的总数量数据量；这些单位都为Kilobytes。</span><br><span class="line">CPU属性</span><br><span class="line"><span class="meta">%</span><span class="bash">user cpu处在用户模式下的时间百分比</span></span><br><span class="line"><span class="meta">%</span><span class="bash">nice cpu处在带NICE值的用户模式下的时间百分比</span></span><br><span class="line"><span class="meta">%</span><span class="bash">system cpu处在系统模式下的时间百分比</span></span><br><span class="line"><span class="meta">%</span><span class="bash">iowait cpu等待输入输出完成时间的百分比</span></span><br><span class="line"><span class="meta">%</span><span class="bash">steal 管理程序维护另一个虚拟处理器时，虚拟CPU的无意识等待时间百分比</span></span><br><span class="line"><span class="meta">%</span><span class="bash">idle cpu空闲时间百分比注意:如果%iowait的值过高，表示硬盘存在I/O瓶颈，%idle值高，表示CPU较空闲，如果%idle值高但系统响应慢时，有可能是CPU等待分配内存，此时应加大内存容量。%idle值如果持续低于10，那么系统的CPU处理能力相对较低，表明系统中最需要解决的资源是CPU。</span></span><br><span class="line"></span><br><span class="line">2.ifstat</span><br><span class="line">网络接口监测工具</span><br><span class="line"></span><br><span class="line">ifstat options</span><br><span class="line"></span><br><span class="line">-l  监测环路网络接口。缺省情况下ifstat监测活动的所有非环路网络接口</span><br><span class="line">-a  监测能检测到的所有网络接口的状态信息。</span><br><span class="line">-z  隐藏流量是无的接口，如接口启动了但是未使用的。</span><br><span class="line">-i &lt;interface&gt;  指定要监测的接口。</span><br><span class="line">-s 通过SNMP查询一个远程主机。</span><br><span class="line">-h 显示帮助信息</span><br><span class="line">-n 关闭周期性显示头部信息。</span><br><span class="line">-t 在每一行的开头加一个时间戳</span><br><span class="line">-T 报告所有检测接口的全部带宽</span><br><span class="line">-w 指定间隔时间（与官方的文档说明并不同，不知道是不是写文档的人写错，反正我测试后是间隔时间）</span><br><span class="line">-W 如果显示内容超出终端窗口的宽度，就换行</span><br><span class="line">-S 在同一行更新显示内容 </span><br><span class="line">-b 用kbits/s显示带宽</span><br><span class="line">-q 按键模式</span><br><span class="line">-v 显示版本信息</span><br><span class="line">-d 指定一个驱动来收集状态信息</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">3.netstat</span><br><span class="line">Netstat是控制台命令,是一个监控TCP/IP网络的非常有用的工具，它可以显示路由表、实际的网络连接以及每一个网络接口设备的状态信息。Netstat用于显示与IP、TCP、UDP和ICMP协议相关的统计数据，</span><br><span class="line">一般用于检验本机各端口的网络连接情况。</span><br><span class="line"></span><br><span class="line">netstat options</span><br><span class="line"></span><br><span class="line">-a (all) 显示所有选项，默认不显示LISTEN相关。</span><br><span class="line">-t (tcp) 仅显示tcp相关选项。</span><br><span class="line">-u (udp) 仅显示udp相关选项。</span><br><span class="line">-n 拒绝显示别名，能显示数字的全部转化成数字。</span><br><span class="line">-l 仅列出有在 Listen (监听) 的服务状态。</span><br><span class="line"></span><br><span class="line">-p 显示建立相关链接的程序名</span><br><span class="line">-r 显示路由信息，路由表</span><br><span class="line">-e 显示扩展信息，例如uid等</span><br><span class="line">-s 按各个协议进行统计</span><br><span class="line">-c 每隔一个固定时间，执行该netstat命令。</span><br><span class="line">LISTEN和LISTENING的状态只有用-a或者-l才能看到。</span><br><span class="line"></span><br><span class="line">1、列出所有端口 #netstat -a</span><br><span class="line">2、列出所有 tcp 端口 #netstat -at</span><br><span class="line">3、列出所有 udp 端口 #netstat -au</span><br><span class="line">4、只显示监听端口 #netstat -l</span><br><span class="line">5、只列出所有监听 tcp 端口 #netstat -lt</span><br><span class="line">6、只列出所有监听 udp 端口 #netstat -lu</span><br><span class="line">7、列出所有监听 UNIX 端口 #netstat -lx</span><br><span class="line">8、显示所有端口的统计信息 #netstat -s</span><br><span class="line">9、显示 TCP 或 UDP 端口的统计信息 #netstat -st 或 -su</span><br><span class="line">10、 输出中显示 PID 和进程名称 #netstat -p</span><br><span class="line">4.vmstat</span><br><span class="line">展现给定时间间隔的服务器的状态值,</span><br><span class="line">包括服务器的CPU使用率，内存使用，</span><br><span class="line">虚拟内存交换情况,IO读写情况</span><br><span class="line"></span><br><span class="line"> vmstat [options] [delay [count]]</span><br><span class="line">参数说明</span><br><span class="line">Procs（进程） </span><br><span class="line">r等待执行的任务数展示了正在执行和等待cpu资源的任务个数当这个值超过了cpu个数，就会出现cpu瓶颈。</span><br><span class="line">B等待IO的进程数量</span><br><span class="line">Memory(内存)</span><br><span class="line">swpd</span><br><span class="line">正在使用虚拟的内存大小，单位k</span><br><span class="line">free空闲内存大小</span><br><span class="line">buff已用的buff大小，对块设备的读写进行缓冲</span><br><span class="line">cache已用的cache大小，文件系统的cache</span><br><span class="line">inact</span><br><span class="line">非活跃内存大小，即被标明可回收的内存，区别于free和active </span><br><span class="line">active活跃的内存大小</span><br><span class="line">Swap</span><br><span class="line">si每秒从交换区写入内存的大小（单位：kb/s）</span><br><span class="line">so每秒从内存写到交换区的大小</span><br><span class="line">IO</span><br><span class="line">bi每秒读取的块数（读磁盘）</span><br><span class="line"> 块设备每秒接收的块数量，单位是block，这里的块设备是指系统上所有的磁盘和其他块设备，现在的Linux版本块的大小为1024bytes</span><br><span class="line">bo每秒写入的块数（写磁盘）</span><br><span class="line">块设备每秒发送的块数量，单位是block</span><br><span class="line"> system </span><br><span class="line">in ：中断数cs:每秒上下文切换数</span><br><span class="line">CPU</span><br><span class="line">us用户进程执行消耗cpu时间(user time) </span><br><span class="line">us的值比较高时，说明用户进程消耗的cpu时间多，但是如果长期超过50%的使用，那么我们就该考虑优化程序算法或其他措施了</span><br><span class="line">sy系统进程消耗cpu时间(system time)</span><br><span class="line">sys的值过高时，说明系统内核消耗的cpu资源多，这个不是良性的表现，我们应该检查原因。这里us + sy的参考值为80%，如果us+sy 大于 80%说明可能存在CPU不足</span><br><span class="line">Id空闲时间(包括IO等待时间)</span><br><span class="line"> 一般来说 us+sy+id=100</span><br><span class="line">wa等待IO时间</span><br><span class="line">wa过高时，说明io等待比较严重，这可能是由于磁盘大量随机访问造成的，也有可能是磁盘的带宽出现瓶颈。</span><br><span class="line">5.tcpdump</span><br><span class="line">虚拟机内抓一下网卡上某个ip的流量</span><br><span class="line">tcpdump  -i ens3 |grep 10.192.54.220</span><br><span class="line">6.ethtool  </span><br><span class="line">查看网卡信息</span><br><span class="line">ethtool eth0 </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="备份压缩"><a href="#备份压缩" class="headerlink" title="备份压缩"></a>备份压缩</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">1.zip</span><br><span class="line">zip -r myfile.zip ./* </span><br><span class="line">unzip -o -d /home/sunny myfile.zip #解压myfile.zip 到/home/sunny</span><br><span class="line">2.tar</span><br><span class="line">用于备份文件、压缩、解压</span><br><span class="line"></span><br><span class="line">    -c：建立打包文件，可搭配-v查看过程中被打包的文件名</span><br><span class="line">    -t:查看打包文件的内容含有哪些档名，重点在查看档名就是了</span><br><span class="line">    -x:解打包或解压缩的功能，可以搭配-C在特定的目录解开，特别留意的是-c,-t，-x不可同时出现在一串指令中</span><br><span class="line">    -z：透过gzip的支持进行压缩解压缩，文件最好是*.tar.gz</span><br><span class="line">    -j：透过bzip2的支持进行压缩解压缩，文件最好是*.tar.bz2</span><br><span class="line">    -J：透过xz的支持进行压缩解压缩，文件最好是*.tar.xz</span><br><span class="line">    -v:在压缩解压缩的过程中，将正在处理的文件名显示出来 </span><br><span class="line">    -f filename：-f 后面要立刻接要被处理的文档名</span><br><span class="line">    -C目录：这个选项用在解压缩，若要在特定目录解压缩，可以使用这个选项</span><br><span class="line">    -p：保留备份数据的原本权限与属性，常用于备份-c重要的配置文件</span><br><span class="line">    -P：保留绝对路径，即允许备份数据中含有根目录存在</span><br><span class="line">    --exclude=FILE：在压缩过程中，不要将FILE 打包</span><br><span class="line"></span><br><span class="line">    1、# tar -czvf test.tar.gz a.c   //压缩（compress） a.c文件为test.tar.gz</span><br><span class="line">    2、tar -tzvf test.tar.gz （列出压缩文件内容）(list)</span><br><span class="line">    3、tar -xzvf test.tar.gz（解压）(extract)</span><br><span class="line">    4、tar -zpcv -f  /root/etc.tar.gz  /etc#备份/etc（先su -切换到root）</span><br><span class="line">          tar -jpcv -f   /root/etc.tar.bz2  /etc</span><br><span class="line">          tar -Jpcv -f   /root/etc.tar.xz  /etc</span><br><span class="line"></span><br><span class="line">3.xz</span><br><span class="line">创建tar.xz文件：只要先 tar cvf xxx.tar xxx/ 这样创建xxx.tar文件先，然后使用 xz -z xxx.tar 来将 xxx.tar压缩成为 xxx.tar.xz</span><br><span class="line"></span><br><span class="line">解压tar.xz文件：先 xz -d xxx.tar.xz 将 xxx.tar.xz解压成 xxx.tar 然后，再用 tar xvf xxx.tar来解包。</span><br><span class="line">4.子主题 4</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>软件维护</strong></p><p>Ubuntu</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">更新软件源</span><br><span class="line">1.更改源sudo vim /etc/apt/sources.list</span><br><span class="line">2.sudo apt-get update</span><br><span class="line">安装软件</span><br><span class="line">3.sudo apt-get install 软件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Centos</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">1.更改yum源</span><br><span class="line">wget 官方源/aliyun 等 -O /etc/yum.repos.d/CenOS-Base.repo</span><br><span class="line">yum clean all &amp;&amp; yum makecache  #生成缓存</span><br><span class="line">2.安装EPEL 源</span><br><span class="line">EPEL (Extra Packages for Enterprise Linux)是基于Fedora的一个项目，为“红帽系”的操作系统提供额外的软件包，适用于RHEL、CentOS和Scientific Linux.</span><br><span class="line"></span><br><span class="line">我们在Centos下使用yum安装时往往找不到rpm的情况，官方的rpm repository提供的rpm包也不够丰富，很多时候需要自己编译很痛苦，而EPEL恰恰可以解决这两方面的问题。EPEL的全称叫 Extra Packages for Enterprise Linux 。EPEL是由 Fedora 社区打造，为 RHEL 及衍生发行版如 CentOS、Scientific Linux 等提供高质量软件包的项目。装上了 EPEL之后，就相当于添加了一个第三方源。</span><br><span class="line">————————————————</span><br><span class="line">版权声明：本文为CSDN博主「不忘初心fight」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。</span><br><span class="line">原文链接：https://blog.csdn.net/weixin_41831919/article/details/109035936</span><br><span class="line">1）yum install -y epel-release </span><br><span class="line">[root@192 daos]# ll /etc/yum.repos.d/</span><br><span class="line">total 52</span><br><span class="line">-rw-r--r--. 1 root root 1664 Oct 23  2020 CentOS-Base.repo</span><br><span class="line">-rw-r--r--. 1 root root 2523 Dec 26  2020 CentOS-Base.repo.aliyun</span><br><span class="line">-rw-r--r--. 1 root root 1309 Nov 23  2020 CentOS-CR.repo</span><br><span class="line">-rw-r--r--. 1 root root  649 Nov 23  2020 CentOS-Debuginfo.repo</span><br><span class="line">-rw-r--r--. 1 root root  314 Nov 23  2020 CentOS-fasttrack.repo</span><br><span class="line">-rw-r--r--. 1 root root  630 Nov 23  2020 CentOS-Media.repo</span><br><span class="line">-rw-r--r--. 1 root root 1331 Nov 23  2020 CentOS-Sources.repo</span><br><span class="line">-rw-r--r--. 1 root root 8515 Nov 23  2020 CentOS-Vault.repo</span><br><span class="line">-rw-r--r--. 1 root root  616 Nov 23  2020 CentOS-x86_64-kernel.repo</span><br><span class="line">-rw-r--r--. 1 root root  951 Oct  2  2017 epel.repo</span><br><span class="line">-rw-r--r--. 1 root root 1050 Oct  2  2017 epel-testing.repo</span><br><span class="line">2）yum repolist</span><br><span class="line">3) yum clean all &amp;&amp; yum makecache</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>其他</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.set -e # shell文件开头加上set -e,这句语句告诉bash如果任何语句的执行结果不是true则应该退出</span><br></pre></td></tr></table></figure><p><strong>自定义安装软件环境变量设置</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Linux环境变量配置方法一：export-PATH"><a href="#Linux环境变量配置方法一：export-PATH" class="headerlink" title="Linux环境变量配置方法一：export PATH"></a>Linux环境变量配置方法一：<code>export PATH</code></h3><p>使用<code>export</code>命令直接修改<code>PATH</code>的值，配置MySQL进入环境变量的方法:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/home/uusama/mysql/bin:$PATH</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者把PATH放在前面</span></span><br><span class="line">export PATH=$PATH:/home/uusama/mysql/bin</span><br></pre></td></tr></table></figure><p>注意事项：</p><ul><li>生效时间：立即生效</li><li>生效期限：当前终端有效，窗口关闭后无效</li><li>生效范围：仅对当前用户有效</li><li>配置的环境变量中不要忘了加上原来的配置，即<code>$PATH</code>部分，避免覆盖原来配置</li></ul><h3 id="Linux环境变量配置方法二：vim-bashrc"><a href="#Linux环境变量配置方法二：vim-bashrc" class="headerlink" title="Linux环境变量配置方法二：vim ~/.bashrc"></a>Linux环境变量配置方法二：<code>vim ~/.bashrc</code></h3><p>通过修改用户目录下的<code>~/.bashrc</code>文件进行配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在最后一行加上</span></span><br><span class="line">export PATH=$PATH:/home/uusama/mysql/bin</span><br></pre></td></tr></table></figure><p>注意事项：</p><ul><li>生效时间：使用相同的用户打开新的终端时生效，或者手动<code>source ~/.bashrc</code>生效</li><li>生效期限：永久有效</li><li>生效范围：仅对当前用户有效</li><li>如果有后续的环境变量加载文件覆盖了<code>PATH</code>定义，则可能不生效</li></ul><h3 id="Linux环境变量配置方法三：vim-bash-profile"><a href="#Linux环境变量配置方法三：vim-bash-profile" class="headerlink" title="Linux环境变量配置方法三：vim ~/.bash_profile"></a>Linux环境变量配置方法三：<code>vim ~/.bash_profile</code></h3><p>和修改<code>~/.bashrc</code>文件类似，也是要在文件最后加上新的路径即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在最后一行加上</span></span><br><span class="line">export PATH=$PATH:/home/uusama/mysql/bin</span><br></pre></td></tr></table></figure><p>注意事项：</p><ul><li>生效时间：使用相同的用户打开新的终端时生效，或者手动<code>source ~/.bash_profile</code>生效</li><li>生效期限：永久有效</li><li>生效范围：仅对当前用户有效</li><li>如果没有<code>~/.bash_profile</code>文件，则可以编辑<code>~/.profile</code>文件或者新建一个</li></ul><h3 id="Linux环境变量配置方法四：vim-etc-bashrc"><a href="#Linux环境变量配置方法四：vim-etc-bashrc" class="headerlink" title="Linux环境变量配置方法四：vim /etc/bashrc"></a>Linux环境变量配置方法四：<code>vim /etc/bashrc</code></h3><p>该方法是修改系统配置，需要管理员权限（如root）或者对该文件的写入权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 如果/etc/bashrc文件不可编辑，需要修改为可编辑</span></span><br><span class="line">chmod -v u+w /etc/bashrc</span><br><span class="line"></span><br><span class="line">vim /etc/bashrc</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在最后一行加上</span></span><br><span class="line">export PATH=$PATH:/home/uusama/mysql/bin</span><br></pre></td></tr></table></figure><p>注意事项：</p><ul><li>生效时间：新开终端生效，或者手动<code>source /etc/bashrc</code>生效</li><li>生效期限：永久有效</li><li>生效范围：对所有用户有效</li></ul><h3 id="Linux环境变量配置方法五：vim-etc-profile"><a href="#Linux环境变量配置方法五：vim-etc-profile" class="headerlink" title="Linux环境变量配置方法五：vim /etc/profile"></a>Linux环境变量配置方法五：<code>vim /etc/profile</code></h3><p>该方法修改系统配置，需要管理员权限或者对该文件的写入权限，和<code>vim /etc/bashrc</code>类似：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 如果/etc/profile文件不可编辑，需要修改为可编辑</span></span><br><span class="line">chmod -v u+w /etc/profile</span><br><span class="line"></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在最后一行加上</span></span><br><span class="line">export PATH=$PATH:/home/uusama/mysql/bin</span><br></pre></td></tr></table></figure><p>注意事项：</p><ul><li>生效时间：新开终端生效，或者手动<code>source /etc/profile</code>生效</li><li>生效期限：永久有效</li><li>生效范围：对所有用户有效</li></ul><h3 id="Linux环境变量配置方法六：vim-etc-environment"><a href="#Linux环境变量配置方法六：vim-etc-environment" class="headerlink" title="Linux环境变量配置方法六：vim /etc/environment"></a>Linux环境变量配置方法六：<code>vim /etc/environment</code></h3><p>该方法是修改系统环境配置文件，需要管理员权限或者对该文件的写入权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 如果/etc/bashrc文件不可编辑，需要修改为可编辑</span></span><br><span class="line">chmod -v u+w /etc/environment</span><br><span class="line"></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在最后一行加上</span></span><br><span class="line">export PATH=$PATH:/home/uusama/mysql/bin</span><br></pre></td></tr></table></figure><p>注意事项：</p><ul><li>生效时间：新开终端生效，或者手动<code>source /etc/environment</code>生效</li><li>生效期限：永久有效</li><li>生效范围：对所有用户有效</li></ul><h2 id="Linux环境变量加载原理解析"><a href="#Linux环境变量加载原理解析" class="headerlink" title="Linux环境变量加载原理解析"></a>Linux环境变量加载原理解析</h2><p>上面列出了环境变量的各种配置方法，那么Linux是如何加载这些配置的呢？是以什么样的顺序加载的呢？</p><p>特定的加载顺序会导致相同名称的环境变量定义被覆盖或者不生效。</p><h3 id="环境变量的分类"><a href="#环境变量的分类" class="headerlink" title="环境变量的分类"></a>环境变量的分类</h3><p>环境变量可以简单的分成用户自定义的环境变量以及系统级别的环境变量。</p><ul><li>用户级别环境变量定义文件：<code>~/.bashrc</code>、<code>~/.profile</code>（部分系统为：<code>~/.bash_profile</code>）</li><li>系统级别环境变量定义文件：<code>/etc/bashrc</code>、<code>/etc/profile</code>(部分系统为：<code>/etc/bash_profile</code>）、<code>/etc/environment</code></li></ul><p>另外在用户环境变量中，系统会首先读取<code>~/.bash_profile</code>（或者<code>~/.profile</code>）文件，如果没有该文件则读取<code>~/.bash_login</code>，根据这些文件中内容再去读取<code>~/.bashrc</code>。</p><h3 id="测试Linux环境变量加载顺序的方法"><a href="#测试Linux环境变量加载顺序的方法" class="headerlink" title="测试Linux环境变量加载顺序的方法"></a>测试Linux环境变量加载顺序的方法</h3><p>为了测试各个不同文件的环境变量加载顺序，我们在每个环境变量定义文件中的第一行都定义相同的环境变量<code>UU_ORDER</code>，该变量的值为本身的值连接上当前文件名称。</p><p>需要修改的文件如下：</p><ul><li><code>/etc/environment</code></li><li><code>/etc/profile</code></li><li><code>/etc/profile.d/test.sh</code>，新建文件，没有文件夹可略过</li><li><code>/etc/bashrc</code>，或者<code>/etc/bash.bashrc</code></li><li><code>~/.bash_profile</code>，或者<code>~/.profile</code></li><li><code>~/.bashrc</code></li></ul><p>在每个文件中的第一行都加上下面这句代码，并相应的把冒号后的内容修改为当前文件的绝对文件名。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export UU_ORDER=&quot;$UU_ORDER:~/.bash_profile&quot;</span><br></pre></td></tr></table></figure><p>修改完之后保存，新开一个窗口，然后<code>echo $UU_ORDER</code>观察变量的值：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uusama@ubuntu:~$ echo $UU_ORDER</span><br><span class="line"><span class="meta">$</span><span class="bash">UU_ORDER:/etc/environment:/etc/profile:/etc/bash.bashrc:/etc/profile.d/test.sh:~/.profile:~/.bashrc</span></span><br></pre></td></tr></table></figure><p>可以推测出Linux加载环境变量的顺序如下：</p><ol><li><code>/etc/environment</code></li><li><code>/etc/profile</code></li><li><code>/etc/bash.bashrc</code></li><li><code>/etc/profile.d/test.sh</code></li><li><code>~/.profile</code></li><li><code>~/.bashrc</code></li></ol><h3 id="Linux环境变量文件加载详解"><a href="#Linux环境变量文件加载详解" class="headerlink" title="Linux环境变量文件加载详解"></a>Linux环境变量文件加载详解</h3><p>由上面的测试可容易得出Linux加载环境变量的顺序如下，：</p><p>系统环境变量 -&gt; 用户自定义环境变量<br><code>/etc/environment</code> -&gt; <code>/etc/profile</code> -&gt; <code>~/.profile</code></p><p>打开<code>/etc/profile</code>文件你会发现，该文件的代码中会加载<code>/etc/bash.bashrc</code>文件，然后检查<code>/etc/profile.d/</code>目录下的<code>.sh</code>文件并加载。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> /etc/profile: system-wide .profile file <span class="keyword">for</span> the Bourne shell (sh(1))</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).</span></span><br><span class="line"></span><br><span class="line">if [ &quot;$PS1&quot; ]; then</span><br><span class="line">  if [ &quot;$BASH&quot; ] &amp;&amp; [ &quot;$BASH&quot; != &quot;/bin/sh&quot; ]; then</span><br><span class="line">    # The file bash.bashrc already sets the default PS1.</span><br><span class="line">    # PS1=&#x27;\h:\w\$ &#x27;</span><br><span class="line">    if [ -f /etc/bash.bashrc ]; then</span><br><span class="line">      . /etc/bash.bashrc</span><br><span class="line">    fi</span><br><span class="line">  else</span><br><span class="line">    if [ &quot;`id -u`&quot; -eq 0 ]; then</span><br><span class="line">      PS1=&#x27;# &#x27;</span><br><span class="line">    else</span><br><span class="line">      PS1=&#x27;$ &#x27;</span><br><span class="line">    fi</span><br><span class="line">  fi</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ -d /etc/profile.d ]; then</span><br><span class="line">  for i in /etc/profile.d/*.sh; do</span><br><span class="line">    if [ -r $i ]; then</span><br><span class="line">      . $i</span><br><span class="line">    fi</span><br><span class="line">  done</span><br><span class="line">  unset i</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>其次再打开<code>~/.profile</code>文件，会发现该文件中加载了<code>~/.bashrc</code>文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">if</span> running bash</span></span><br><span class="line">if [ -n &quot;$BASH_VERSION&quot; ]; then</span><br><span class="line">    # include .bashrc if it exists</span><br><span class="line">    if [ -f &quot;$HOME/.bashrc&quot; ]; then</span><br><span class="line">. &quot;$HOME/.bashrc&quot;</span><br><span class="line">    fi</span><br><span class="line">fi</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> PATH so it includes user<span class="string">&#x27;s private bin directories</span></span></span><br><span class="line">PATH=&quot;$HOME/bin:$HOME/.local/bin:$PATH&quot;</span><br></pre></td></tr></table></figure><p>从<code>~/.profile</code>文件中代码不难发现，<code>/.profile</code>文件<strong>只在用户登录的时候读取一次</strong>，而<code>/.bashrc</code>会在每次运行<code>Shell</code>脚本的时候读取一次。</p><h3 id="一些小技巧"><a href="#一些小技巧" class="headerlink" title="一些小技巧"></a>一些小技巧</h3><p>可以自定义一个环境变量文件，比如在某个项目下定义<code>uusama.profile</code>，在这个文件中使用<code>export</code>定义一系列变量，然后在<code>~/.profile</code>文件后面加上：<code>sourc uusama.profile</code>，这样你每次登陆都可以在Shell脚本中使用自己定义的一系列变量。</p><p>也可以使用<code>alias</code>命令定义一些命令的别名，比如<code>alias rm=&quot;rm -i&quot;</code>（双引号必须），并把这个代码加入到<code>~/.profile</code>中，这样你每次使用<code>rm</code>命令的时候，都相当于使用<code>rm -i</code>命令，非常方便。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;目录文件管理&quot;&gt;&lt;a href=&quot;#目录文件管理&quot; class=&quot;headerlink&quot; title=&quot;目录文件管理&quot;&gt;&lt;/a&gt;目录文件管理&lt;/h5&gt;&lt;h6 id=&quot;目录管理&quot;&gt;&lt;a href=&quot;#目录管理&quot; class=&quot;headerlink&quot; title=&quot;目</summary>
      
    
    
    
    <category term="服务端" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    <category term="Linux" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/Linux/"/>
    
    <category term="工作常用命令" scheme="https://hxlpub.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/Linux/%E5%B7%A5%E4%BD%9C%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
  </entry>
  
</feed>
